<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20242.24.0807.0327                               -->
<workbook original-version='18.1' source-build='2024.2.2 (20242.24.0807.0327)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <repository-location id='TableauDashboard-FrennyPinto' path='/workbooks' revision='1.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Orders (Superstore_Dataset)' inline='true' name='federated.1a5vjpo0abb5s417dxotz0ks1z1m' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Superstore_Dataset' name='excel-direct.0eaveto1huu5871er5vdq1ag7fbi'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Frenn/Desktop/UE/2nd Sem/Tableau Exercise/Superstore_Dataset.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0eaveto1huu5871er5vdq1ag7fbi' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:U9997:no:A1:U9997:0' header='yes' outcome='2'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State' ordinal='10' />
            <column datatype='integer' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Quantity' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0eaveto1huu5871er5vdq1ag7fbi' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:U9997:no:A1:U9997:0' header='yes' outcome='2'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State' ordinal='10' />
            <column datatype='integer' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Quantity' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U9997:no:A1:U9997:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_F7F51850B5C248CE8137C181010857FB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_F7F51850B5C248CE8137C181010857FB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_F7F51850B5C248CE8137C181010857FB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_F7F51850B5C248CE8137C181010857FB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_F7F51850B5C248CE8137C181010857FB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_F7F51850B5C248CE8137C181010857FB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_F7F51850B5C248CE8137C181010857FB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_F7F51850B5C248CE8137C181010857FB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_F7F51850B5C248CE8137C181010857FB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_F7F51850B5C248CE8137C181010857FB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_F7F51850B5C248CE8137C181010857FB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_F7F51850B5C248CE8137C181010857FB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_F7F51850B5C248CE8137C181010857FB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_F7F51850B5C248CE8137C181010857FB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_F7F51850B5C248CE8137C181010857FB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_F7F51850B5C248CE8137C181010857FB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_F7F51850B5C248CE8137C181010857FB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_F7F51850B5C248CE8137C181010857FB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_F7F51850B5C248CE8137C181010857FB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_F7F51850B5C248CE8137C181010857FB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_F7F51850B5C248CE8137C181010857FB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Percentage of Sales' datatype='real' default-format='p0.00%' name='[Calculation1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Sales]) / TOTAL(SUM([Sales]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Profit Margin' datatype='real' name='[Calculation_1510957739070898176]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Profit]/[Sales])*100' />
      </column>
      <column datatype='string' name='[Category]' role='dimension' type='nominal' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column aggregation='None' caption='Sales (bin)' datatype='integer' name='[Sales (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='3' formula='[Sales]' peg='0' size='3000' />
      </column>
      <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
      <column datatype='date' name='[Ship Date]' role='dimension' type='ordinal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_F7F51850B5C248CE8137C181010857FB]' role='measure' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[Orders_F7F51850B5C248CE8137C181010857FB]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Orders_F7F51850B5C248CE8137C181010857FB:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
      <column-instance column='[Sales (bin)]' derivation='None' name='[none:Sales (bin):ok]' pivot='key' type='ordinal' />
      <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
      <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Ship Date]' derivation='Year-Trunc' name='[tyr:Ship Date:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Category)' hidden='true' name='[Action (Category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Category]' />
        </groupfilter>
      </group>
      <group caption='Action (State)' hidden='true' name='[Action (State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Ship Date))' hidden='true' name='[Action (YEAR(Ship Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tyr:Ship Date:ok]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Category,Sales (bin))]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Category:nk]' />
          <groupfilter function='level-members' level='[none:Sales (bin):ok]' />
        </groupfilter>
      </group>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/Frenn/AppData/Local/Temp/TableauTemp/#TableauTemp_0w8aaps1o2q3cy1cozgbw1b9ajzu.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='09/21/2024 11:08:51 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Row ID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Row ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Row ID</remote-alias>
              <ordinal>0</ordinal>
              <family>Orders</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9996</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_F7F51850B5C248CE8137C181010857FB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Order ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Order ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Order ID</remote-alias>
              <ordinal>1</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3208</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_F7F51850B5C248CE8137C181010857FB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Order Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Order Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Order Date</remote-alias>
              <ordinal>2</ordinal>
              <family>Orders</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1307</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_F7F51850B5C248CE8137C181010857FB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ship Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Ship Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ship Date</remote-alias>
              <ordinal>3</ordinal>
              <family>Orders</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1514</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_F7F51850B5C248CE8137C181010857FB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ship Mode</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Ship Mode]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ship Mode</remote-alias>
              <ordinal>4</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_F7F51850B5C248CE8137C181010857FB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Customer ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Customer ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Customer ID</remote-alias>
              <ordinal>5</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1021</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_F7F51850B5C248CE8137C181010857FB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Customer Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Customer Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Customer Name</remote-alias>
              <ordinal>6</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1021</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_F7F51850B5C248CE8137C181010857FB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Segment</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Segment]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Segment</remote-alias>
              <ordinal>7</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_F7F51850B5C248CE8137C181010857FB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>8</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_F7F51850B5C248CE8137C181010857FB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>City</remote-name>
              <remote-type>129</remote-type>
              <local-name>[City]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>City</remote-alias>
              <ordinal>9</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>505</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_F7F51850B5C248CE8137C181010857FB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>State</remote-name>
              <remote-type>129</remote-type>
              <local-name>[State]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>State</remote-alias>
              <ordinal>10</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>49</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_F7F51850B5C248CE8137C181010857FB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Postal Code</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Postal Code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Postal Code</remote-alias>
              <ordinal>11</ordinal>
              <family>Orders</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>624</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_F7F51850B5C248CE8137C181010857FB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Region]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Region</remote-alias>
              <ordinal>12</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_F7F51850B5C248CE8137C181010857FB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Product ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Product ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Product ID</remote-alias>
              <ordinal>13</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2117</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_F7F51850B5C248CE8137C181010857FB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Category]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Category</remote-alias>
              <ordinal>14</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_F7F51850B5C248CE8137C181010857FB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Sub-Category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Sub-Category]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Sub-Category</remote-alias>
              <ordinal>15</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>17</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_F7F51850B5C248CE8137C181010857FB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Product Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Product Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Product Name</remote-alias>
              <ordinal>16</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2095</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_F7F51850B5C248CE8137C181010857FB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Sales</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Sales]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Sales</remote-alias>
              <ordinal>17</ordinal>
              <family>Orders</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3454</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_F7F51850B5C248CE8137C181010857FB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Quantity</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Quantity]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Quantity</remote-alias>
              <ordinal>18</ordinal>
              <family>Orders</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>16</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_F7F51850B5C248CE8137C181010857FB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Discount</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Discount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Discount</remote-alias>
              <ordinal>19</ordinal>
              <family>Orders</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_F7F51850B5C248CE8137C181010857FB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Profit</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Profit]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Profit</remote-alias>
              <ordinal>20</ordinal>
              <family>Orders</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3905</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_F7F51850B5C248CE8137C181010857FB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Category:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Furniture&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Technology&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Office Supplies&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[__tableau_internal_object_id__].[cnt:Orders_F7F51850B5C248CE8137C181010857FB:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[sum:Profit:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[sum:Sales:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:State:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Alabama&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tennessee&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Montana&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;North Dakota&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nebraska&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Maryland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;South Carolina&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Minnesota&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pennsylvania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;West Virginia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kansas&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Maine&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rhode Island&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South Dakota&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;District of Columbia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vermont&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:City:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Amarillo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Baltimore&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bozeman&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cary&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Clinton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cuyahoga Falls&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Durham&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fargo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Glendale&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hampton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Huntington Beach&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Knoxville&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lawton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Loveland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Melbourne&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Monroe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;New Rochelle&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Omaha&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pearland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Portage&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rio Rancho&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Peters&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Santa Clara&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Summerville&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Troy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Watertown&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;York&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aberdeen&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Athens&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Billings&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Burlington&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chicago&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Coppell&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Denver&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Elyria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Frisco&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Greenwood&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hillsboro&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jonesboro&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lakewood&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lodi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Marietta&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Minneapolis&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Muskogee&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Norwich&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Palm Coast&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Plantation&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Redmond&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Round Rock&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;San Jose&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Southaven&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Thomasville&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Virginia Beach&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Wichita&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Alexandria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Aurora&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bolingbrook&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Canton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Citrus Heights&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Costa Mesa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dover&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eugene&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gastonia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hackensack&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Homestead&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kenosha&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Las Cruces&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Longview&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mason&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Missoula&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;New Albany&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Odessa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pasadena&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pompano Beach&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Renton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Saint Charles&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sandy Springs&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Springfield&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tinley Park&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Warwick&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Woodland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Antioch&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Baytown&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Broken Arrow&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chandler&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Colorado Springs&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Davis&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Eau Claire&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fort Collins&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Grand Prairie&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Helena&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Inglewood&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;La Quinta&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lehi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Madison&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Meridian&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Moreno Valley&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Niagara Falls&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Orland Park&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Perth Amboy&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pueblo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rock Hill&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Salt Lake City&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Seattle&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tamarac&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Twin Falls&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;West Allis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Anaheim&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bangor&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brentwood&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cedar Hill&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Clovis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dallas&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Eagan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Farmington&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Glenview&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Harlingen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Huntsville&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;La Crosse&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Layton&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lowell&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Memphis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Montebello&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;New York City&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ontario&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pembroke Pines&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Portland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Riverside&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saint Petersburg&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Santa Fe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sunnyvale&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tucson&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Waukesha&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Yucaipa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Allen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Austin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bossier City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Carlsbad&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Clarksville&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cottage Grove&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Draper&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Evanston&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Georgetown&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hagerstown&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hoover&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kent&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Las Vegas&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lorain&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mcallen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Missouri City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;New Bedford&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Oklahoma City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pasco&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Port Arthur&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Revere&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Cloud&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sanford&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sterling Heights&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Toledo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Woodstock&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Arvada&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bethlehem&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bullhead City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chester&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Conway&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Delray Beach&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Elkhart&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Fremont&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greensboro&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hickory&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jefferson City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lakeland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Little Rock&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Maple Grove&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Milford&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Murray&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;North Las Vegas&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Oxnard&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Plainfield&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Redding&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Roseville&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;San Francisco&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Smyrna&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Texas City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Vancouver&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Wheeling&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Abilene&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Atlanta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bloomington&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Caldwell&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chico&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Coral Gables&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Des Moines&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Encinitas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gaithersburg&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gresham&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Holland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jupiter&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lancaster&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Logan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Marion&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Miramar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Naperville&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Oak Park&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Park Ridge&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pleasant Grove&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Redondo Beach&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Royal Oak&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;San Luis Obispo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sparks&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Thornton&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Visalia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Wilmington&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Arlington&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bellevue&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Buffalo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chattanooga&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Concord&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Decatur&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;El Cajon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Franklin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Greeley&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hesperia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jacksonville&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lake Elsinore&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Linden&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mansfield&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Middletown&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mount Vernon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Norman&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Overland Park&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pico Rivera&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rapid City&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rome&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;San Clemente&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sioux Falls&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tempe&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Vacaville&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Westland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Allentown&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Avondale&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bowling Green&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Carol Stream&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cleveland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Covington&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dublin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Everett&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gilbert&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Haltom City&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hot Springs&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kirkwood&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Laurel&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Los Angeles&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Medford&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mobile&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;New Brunswick&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Olathe&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Passaic&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Port Orange&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Richardson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Louis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Santa Ana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Stockton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Torrance&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Waterbury&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Woonsocket&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Apopka&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Beaumont&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Broomfield&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chapel Hill&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Columbia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Daytona Beach&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Edinburg&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fort Lauderdale&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Grand Rapids&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hempstead&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iowa City&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lafayette&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Leominster&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Malden&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mesa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Morgan Hill&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Noblesville&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Orlando&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pharr&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Quincy&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rockford&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;San Angelo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sheboygan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tampa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tyler&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;West Jordan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Apple Valley&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bedford&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Brownsville&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Charlotte&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Columbus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dearborn&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Edmond&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fort Worth&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Grapevine&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Henderson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Irving&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Laguna Niguel&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lewiston&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Manchester&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mesquite&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Morristown&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Norfolk&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ormond Beach&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Philadelphia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Raleigh&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rockville&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;San Antonio&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Shelton&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Taylor&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Urbandale&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;West Palm Beach&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Arlington Heights&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bellingham&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Buffalo Grove&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chesapeake&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Conroe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Deer Park&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;El Paso&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Freeport&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Green Bay&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hialeah&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jamestown&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lake Forest&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lindenhurst&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Manteca&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Midland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Murfreesboro&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;North Charleston&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Owensboro&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pine Bluff&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Reading&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Romeoville&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;San Diego&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Skokie&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Texarkana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vallejo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Westminster&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Asheville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Beverly&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Burbank&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cheyenne&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Coon Rapids&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Deltona&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Elmhurst&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fresno&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greenville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Highland Park&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Johnson City&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lakeville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Littleton&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Margate&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Milwaukee&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Murrieta&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;North Miami&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Palatine&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Plano&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Redlands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Roswell&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;San Gabriel&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South Bend&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;The Colony&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vineland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Whittier&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Andover&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bartlett&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bridgeton&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cedar Rapids&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Coachella&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Danbury&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;East Orange&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fayetteville&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Goldsboro&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Harrisonburg&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Independence&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;La Mesa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;League City&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lubbock&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mentor&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Montgomery&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Newark&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Orange&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pensacola&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Providence&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rochester&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Salem&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Santa Maria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Superior&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tulsa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wausau&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Yuma&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Altoona&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bakersfield&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Boynton Beach&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Carrollton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Clifton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cranston&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dubuque&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fairfield&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gladstone&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hamilton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Houston&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kissimmee&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lawrence&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Louisville&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Medina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Modesto&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New Castle&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Olympia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Paterson&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Port Saint Lucie&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Richmond&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Paul&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Santa Barbara&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Suffolk&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Trenton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Waterloo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Yonkers&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Akron&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Atlantic City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Boca Raton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Camarillo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chula Vista&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Coral Springs&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Des Plaines&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Englewood&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Garden City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Grove City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hollywood&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Keller&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lansing&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Long Beach&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Marlborough&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mishawaka&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nashua&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Oakland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Parker&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pocatello&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Redwood City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sacramento&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;San Marcos&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Spokane&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Thousand Oaks&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Waco&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Wilson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Appleton&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belleville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bryan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Charlottesville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Commerce City&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dearborn Heights&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Edmonds&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Frankfort&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Great Falls&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hendersonville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jackson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lake Charles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lincoln Park&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Manhattan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Miami&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mount Pleasant&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Normal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Oswego&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Phoenix&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rancho Cucamonga&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rogers&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;San Bernardino&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sierra Vista&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Temecula&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Utica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Westfield&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ann Arbor&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bayonne&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bristol&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Champaign&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;College Station&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Danville&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;East Point&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Florence&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Grand Island&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hattiesburg&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Indianapolis&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;La Porte&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Macon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Meriden&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Moorhead&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Newport News&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Orem&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Peoria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Provo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rochester Hills&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Salinas&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Scottsdale&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tallahassee&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tuscaloosa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Waynesboro&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Albuquerque&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Auburn&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Boise&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cambridge&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cincinnati&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Corpus Christi&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Detroit&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Escondido&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Garland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gulfport&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Holyoke&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kenner&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Laredo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Longmont&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Marysville&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mission Viejo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nashville&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Oceanside&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Parma&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pomona&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Reno&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saginaw&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;San Mateo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Springdale&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tigard&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Warner Robins&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Woodbury&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Row ID' />
        <field-sort-custom-order field='Order ID' />
        <field-sort-custom-order field='Order Date' />
        <field-sort-custom-order field='Ship Date' />
        <field-sort-custom-order field='Ship Mode' />
        <field-sort-custom-order field='Customer ID' />
        <field-sort-custom-order field='Customer Name' />
        <field-sort-custom-order field='Segment' />
        <field-sort-custom-order field='Country' />
        <field-sort-custom-order field='City' />
        <field-sort-custom-order field='State' />
        <field-sort-custom-order field='Postal Code' />
        <field-sort-custom-order field='Region' />
        <field-sort-custom-order field='Product ID' />
        <field-sort-custom-order field='Category' />
        <field-sort-custom-order field='Sub-Category' />
        <field-sort-custom-order field='Product Name' />
        <field-sort-custom-order field='Sales' />
        <field-sort-custom-order field='Quantity' />
        <field-sort-custom-order field='Discount' />
        <field-sort-custom-order field='Profit' />
        <field-sort-custom-order field='Calculation_1510957739070898176' />
        <field-sort-custom-order field='Geometry (generated)' />
        <field-sort-custom-order field='Latitude (generated)' />
        <field-sort-custom-order field='Longitude (generated)' />
        <field-sort-custom-order field='Sales (bin)' />
        <field-sort-custom-order field=':Measure Names' />
        <field-sort-custom-order field='Multiple Values' />
      </field-sort-info>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Orders' id='Orders_F7F51850B5C248CE8137C181010857FB'>
            <properties context=''>
              <relation connection='excel-direct.0eaveto1huu5871er5vdq1ag7fbi' name='Orders' table='[Orders$]' type='table'>
                <columns gridOrigin='A1:U9997:no:A1:U9997:0' header='yes' outcome='2'>
                  <column datatype='integer' name='Row ID' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                  <column datatype='date' name='Order Date' ordinal='2' />
                  <column datatype='date' name='Ship Date' ordinal='3' />
                  <column datatype='string' name='Ship Mode' ordinal='4' />
                  <column datatype='string' name='Customer ID' ordinal='5' />
                  <column datatype='string' name='Customer Name' ordinal='6' />
                  <column datatype='string' name='Segment' ordinal='7' />
                  <column datatype='string' name='Country' ordinal='8' />
                  <column datatype='string' name='City' ordinal='9' />
                  <column datatype='string' name='State' ordinal='10' />
                  <column datatype='integer' name='Postal Code' ordinal='11' />
                  <column datatype='string' name='Region' ordinal='12' />
                  <column datatype='string' name='Product ID' ordinal='13' />
                  <column datatype='string' name='Category' ordinal='14' />
                  <column datatype='string' name='Sub-Category' ordinal='15' />
                  <column datatype='string' name='Product Name' ordinal='16' />
                  <column datatype='real' name='Sales' ordinal='17' />
                  <column datatype='integer' name='Quantity' ordinal='18' />
                  <column datatype='real' name='Discount' ordinal='19' />
                  <column datatype='real' name='Profit' ordinal='20' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_B592221AA25D42BDADF3BE42BB63DB14]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Sheet 5' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2_56771515D46A441AB8FF36ED76E75496]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Sheet 2' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action5_638394501312420DA9F88B3032D9B090]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Sheet 1' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 5 (generated)' name='[Action5_F834BCDFAF004270AC34C0A58373F714]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Sheet 6' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action6_D316C8822957461C81D96076BC642A58]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Sheet 7' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 6 (generated)' name='[Action6_E6B7CB5217E74E3D84C2EBCE8428DC24]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Sheet 4' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='14'>Category vs. Orders</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Superstore_Dataset)' name='federated.1a5vjpo0abb5s417dxotz0ks1z1m' />
          </datasources>
          <datasource-dependencies datasource='federated.1a5vjpo0abb5s417dxotz0ks1z1m'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='date' name='[Ship Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ship Date]' derivation='Year-Trunc' name='[tyr:Ship Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[Action (State)]'>
            <groupfilter function='level-members' level='[State]' user:ui-action-filter='[Action6_D316C8822957461C81D96076BC642A58]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[Action (YEAR(Ship Date))]'>
            <groupfilter function='level-members' level='[tyr:Ship Date:ok]' user:ui-action-filter='[Action1_B592221AA25D42BDADF3BE42BB63DB14]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[Action (YEAR(Ship Date))]</column>
            <column>[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[Action (State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[sum:Sales:qk]' />
              <text column='[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[none:Category:nk]' />
              <color column='[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[none:Category:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{3A7E9E67-5229-4627-BEA1-7FEAF0C012D4}' />
    </worksheet>
    <worksheet name='Sheet 10'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='14'>Profit</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Superstore_Dataset)' name='federated.1a5vjpo0abb5s417dxotz0ks1z1m' />
          </datasources>
          <datasource-dependencies datasource='federated.1a5vjpo0abb5s417dxotz0ks1z1m'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='date' name='[Ship Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ship Date]' derivation='Year-Trunc' name='[tyr:Ship Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[Action (Category)]'>
            <groupfilter function='level-members' level='[Category]' user:ui-action-filter='[Action3_1330F462D4A54951AB3BA8DF4566F4F3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[Action (State)]'>
            <groupfilter function='level-members' level='[State]' user:ui-action-filter='[Action6_D316C8822957461C81D96076BC642A58]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[Action (YEAR(Ship Date))]'>
            <groupfilter function='level-members' level='[tyr:Ship Date:ok]' user:ui-action-filter='[Action1_B592221AA25D42BDADF3BE42BB63DB14]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[Action (YEAR(Ship Date))]</column>
            <column>[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[Action (Category)]</column>
            <column>[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[Action (State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[sum:Profit:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontsize='20'>&lt;</run>
                <run bold='true' fontsize='20'>[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[sum:Profit:qk]</run>
                <run bold='true' fontsize='20'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{3AF79A88-1F6A-4D0C-9ECC-E54F71489B92}' />
    </worksheet>
    <worksheet name='Sheet 11'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='14'>Sales</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Superstore_Dataset)' name='federated.1a5vjpo0abb5s417dxotz0ks1z1m' />
          </datasources>
          <datasource-dependencies datasource='federated.1a5vjpo0abb5s417dxotz0ks1z1m'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='date' name='[Ship Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ship Date]' derivation='Year-Trunc' name='[tyr:Ship Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[Action (Category)]'>
            <groupfilter function='level-members' level='[Category]' user:ui-action-filter='[Action3_1330F462D4A54951AB3BA8DF4566F4F3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[Action (State)]'>
            <groupfilter function='level-members' level='[State]' user:ui-action-filter='[Action6_D316C8822957461C81D96076BC642A58]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[Action (YEAR(Ship Date))]'>
            <groupfilter function='level-members' level='[tyr:Ship Date:ok]' user:ui-action-filter='[Action1_B592221AA25D42BDADF3BE42BB63DB14]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[Action (YEAR(Ship Date))]</column>
            <column>[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[Action (Category)]</column>
            <column>[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[Action (State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[sum:Sales:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontsize='20'>&lt;</run>
                <run bold='true' fontsize='20'>[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[sum:Sales:qk]</run>
                <run bold='true' fontsize='20'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{B091EC6E-B906-49C9-B2FD-05BC6F342AF1}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='14'>Maximum Orders by City</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Superstore_Dataset)' name='federated.1a5vjpo0abb5s417dxotz0ks1z1m' />
          </datasources>
          <datasource-dependencies datasource='federated.1a5vjpo0abb5s417dxotz0ks1z1m'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='date' name='[Ship Date]' role='dimension' type='ordinal' />
            <_.fcp.ObjectModelTableType.false...column caption='Orders' datatype='integer' name='[__tableau_internal_object_id__].[Orders_F7F51850B5C248CE8137C181010857FB]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <_.fcp.ObjectModelTableType.true...column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_F7F51850B5C248CE8137C181010857FB]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Orders_F7F51850B5C248CE8137C181010857FB]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Orders_F7F51850B5C248CE8137C181010857FB:qk]' pivot='key' type='quantitative' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ship Date]' derivation='Year-Trunc' name='[tyr:Ship Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[Action (Category)]'>
            <groupfilter function='level-members' level='[Category]' user:ui-action-filter='[Action3_1330F462D4A54951AB3BA8DF4566F4F3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[Action (State)]'>
            <groupfilter function='level-members' level='[State]' user:ui-action-filter='[Action6_D316C8822957461C81D96076BC642A58]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[Action (YEAR(Ship Date))]'>
            <groupfilter function='level-members' level='[tyr:Ship Date:ok]' user:ui-action-filter='[Action1_B592221AA25D42BDADF3BE42BB63DB14]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[none:City:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Aberdeen&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Abilene&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Akron&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Albuquerque&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Alexandria&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Allen&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Allentown&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Altoona&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Amarillo&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Anaheim&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Andover&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Ann Arbor&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Antioch&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Apopka&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Apple Valley&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Appleton&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Arlington&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Arlington Heights&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Arvada&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Asheville&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Athens&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Atlanta&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Atlantic City&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Auburn&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Aurora&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Austin&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Avondale&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Bakersfield&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Baltimore&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Bangor&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Bartlett&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Bayonne&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Baytown&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Beaumont&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Bedford&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Belleville&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Bellevue&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Bellingham&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Bethlehem&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Beverly&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Billings&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Bloomington&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Boca Raton&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Boise&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Bolingbrook&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Bossier City&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Bowling Green&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Boynton Beach&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Bozeman&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Brentwood&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Bridgeton&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Bristol&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Broken Arrow&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Broomfield&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Brownsville&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Bryan&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Buffalo&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Buffalo Grove&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Bullhead City&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Burbank&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Burlington&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Caldwell&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Camarillo&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Cambridge&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Canton&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Carlsbad&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Carol Stream&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Carrollton&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Cary&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Cedar Hill&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Cedar Rapids&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Champaign&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Chandler&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Chapel Hill&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Charlotte&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Charlottesville&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Chattanooga&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Chesapeake&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Chester&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Cheyenne&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Chicago&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Chico&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Chula Vista&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Cincinnati&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Citrus Heights&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Clarksville&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Cleveland&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Clifton&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Clinton&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Clovis&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Coachella&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;College Station&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Colorado Springs&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Columbia&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Columbus&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Commerce City&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Concord&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Conroe&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Conway&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Coon Rapids&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Coppell&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Coral Gables&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Coral Springs&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Corpus Christi&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Costa Mesa&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Cottage Grove&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Covington&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Cranston&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Cuyahoga Falls&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Dallas&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Danbury&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Danville&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Davis&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Daytona Beach&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Dearborn&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Dearborn Heights&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Decatur&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Deer Park&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Delray Beach&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Deltona&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Denver&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Des Moines&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Des Plaines&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Detroit&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Dover&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Draper&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Dublin&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Dubuque&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Durham&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Eagan&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;East Orange&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;East Point&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Eau Claire&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Edinburg&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Edmond&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Edmonds&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;El Cajon&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;El Paso&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Elkhart&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Elmhurst&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Elyria&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Encinitas&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Englewood&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Escondido&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Eugene&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Evanston&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Everett&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Fairfield&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Fargo&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Farmington&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Fayetteville&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Florence&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Fort Collins&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Fort Lauderdale&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Fort Worth&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Frankfort&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Franklin&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Freeport&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Fremont&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Fresno&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Frisco&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Gaithersburg&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Garden City&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Garland&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Gastonia&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Georgetown&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Gilbert&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Gladstone&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Glendale&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Glenview&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Goldsboro&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Grand Island&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Grand Prairie&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Grand Rapids&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Grapevine&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Great Falls&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Greeley&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Green Bay&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Greensboro&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Greenville&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Greenwood&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Gresham&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Grove City&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Gulfport&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Hackensack&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Hagerstown&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Haltom City&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Hamilton&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Hampton&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Harlingen&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Harrisonburg&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Hattiesburg&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Helena&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Hempstead&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Henderson&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Hendersonville&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Hesperia&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Hialeah&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Hickory&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Highland Park&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Hillsboro&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Holland&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Hollywood&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Holyoke&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Homestead&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Hoover&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Hot Springs&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Houston&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Huntington Beach&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Huntsville&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Independence&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Indianapolis&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Inglewood&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Iowa City&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Irving&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Jackson&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Jacksonville&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Jamestown&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Jefferson City&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Johnson City&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Jonesboro&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Jupiter&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Keller&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Kenner&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Kenosha&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Kent&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Kirkwood&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Kissimmee&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Knoxville&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;La Crosse&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;La Mesa&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;La Porte&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;La Quinta&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Lafayette&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Laguna Niguel&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Lake Charles&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Lake Elsinore&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Lake Forest&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Lakeland&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Lakeville&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Lakewood&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Lancaster&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Lansing&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Laredo&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Las Cruces&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Las Vegas&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Laurel&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Lawrence&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Lawton&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Layton&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;League City&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Lebanon&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Lehi&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Leominster&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Lewiston&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Lincoln Park&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Linden&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Lindenhurst&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Little Rock&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Littleton&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Lodi&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Logan&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Long Beach&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Longmont&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Longview&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Lorain&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Los Angeles&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Louisville&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Loveland&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Lowell&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Lubbock&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Macon&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Madison&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Malden&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Manchester&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Manhattan&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Mansfield&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Manteca&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Maple Grove&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Margate&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Marietta&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Marion&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Marlborough&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Marysville&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Mason&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Mcallen&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Medford&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Medina&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Melbourne&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Memphis&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Mentor&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Meriden&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Meridian&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Mesa&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Mesquite&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Miami&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Middletown&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Midland&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Milford&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Milwaukee&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Minneapolis&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Miramar&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Mishawaka&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Mission Viejo&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Missoula&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Missouri City&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Mobile&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Modesto&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Monroe&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Montebello&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Montgomery&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Moorhead&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Moreno Valley&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Morgan Hill&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Morristown&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Mount Pleasant&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Mount Vernon&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Murfreesboro&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Murray&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Murrieta&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Muskogee&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Naperville&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Nashua&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Nashville&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;New Albany&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;New Bedford&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;New Brunswick&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;New Castle&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;New Rochelle&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;New York City&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Newark&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Newport News&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Niagara Falls&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Noblesville&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Norfolk&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Normal&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Norman&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;North Charleston&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;North Las Vegas&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;North Miami&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Norwich&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Oak Park&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Oakland&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Oceanside&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Odessa&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Oklahoma City&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Olathe&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Olympia&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Omaha&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Ontario&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Orange&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Orem&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Orland Park&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Orlando&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Ormond Beach&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Oswego&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Overland Park&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Owensboro&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Oxnard&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Palatine&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Palm Coast&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Park Ridge&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Parker&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Parma&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Pasadena&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Pasco&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Passaic&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Paterson&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Pearland&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Pembroke Pines&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Pensacola&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Peoria&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Perth Amboy&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Pharr&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Philadelphia&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Phoenix&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Pico Rivera&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Pine Bluff&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Plainfield&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Plano&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Plantation&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Pleasant Grove&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Pocatello&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Pomona&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Pompano Beach&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Port Arthur&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Port Orange&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Port Saint Lucie&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Portage&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Portland&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Providence&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Provo&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Pueblo&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Quincy&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Raleigh&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Rancho Cucamonga&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Rapid City&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Reading&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Redding&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Redlands&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Redmond&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Redondo Beach&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Redwood City&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Reno&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Renton&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Revere&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Richardson&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Richmond&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Rio Rancho&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Riverside&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Rochester&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Rochester Hills&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Rock Hill&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Rockford&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Rockville&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Rogers&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Rome&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Romeoville&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Roseville&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Roswell&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Round Rock&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Royal Oak&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Sacramento&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Saginaw&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Saint Charles&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Saint Cloud&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Saint Louis&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Saint Paul&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Saint Peters&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Saint Petersburg&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Salem&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Salinas&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Salt Lake City&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;San Angelo&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;San Antonio&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;San Bernardino&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;San Clemente&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;San Diego&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;San Francisco&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;San Gabriel&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;San Jose&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;San Luis Obispo&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;San Marcos&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;San Mateo&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Sandy Springs&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Sanford&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Santa Ana&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Santa Barbara&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Santa Clara&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Santa Fe&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Santa Maria&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Scottsdale&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Seattle&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Sheboygan&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Shelton&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Sierra Vista&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Sioux Falls&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Skokie&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Smyrna&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;South Bend&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Southaven&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Sparks&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Spokane&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Springdale&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Springfield&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Sterling Heights&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Stockton&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Suffolk&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Summerville&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Sunnyvale&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Superior&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Tallahassee&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Tamarac&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Tampa&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Taylor&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Temecula&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Tempe&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Texarkana&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Texas City&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;The Colony&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Thomasville&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Thornton&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Thousand Oaks&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Tigard&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Tinley Park&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Toledo&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Torrance&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Trenton&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Troy&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Tucson&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Tulsa&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Tuscaloosa&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Twin Falls&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Tyler&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Urbandale&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Utica&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Vacaville&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Vallejo&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Vancouver&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Vineland&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Virginia Beach&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Visalia&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Waco&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Warner Robins&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Warwick&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Washington&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Waterbury&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Waterloo&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Watertown&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Waukesha&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Wausau&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Waynesboro&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;West Allis&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;West Jordan&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;West Palm Beach&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Westfield&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Westland&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Westminster&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Wheeling&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Whittier&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Wichita&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Wilmington&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Wilson&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Woodbury&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Woodland&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Woodstock&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Woonsocket&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Yonkers&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;York&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Yucaipa&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Yuma&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[none:City:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[__tableau_internal_object_id__].[cnt:Orders_F7F51850B5C248CE8137C181010857FB:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[none:City:nk]</column>
            <column>[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[Action (YEAR(Ship Date))]</column>
            <column>[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[Action (Category)]</column>
            <column>[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[Action (State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[none:City:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[none:City:nk]</rows>
        <cols>[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[__tableau_internal_object_id__].[cnt:Orders_F7F51850B5C248CE8137C181010857FB:qk]</cols>
      </table>
      <simple-id uuid='{893D2B1F-446A-4674-8100-0685C5F64C33}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Superstore_Dataset)' name='federated.1a5vjpo0abb5s417dxotz0ks1z1m' />
          </datasources>
          <datasource-dependencies datasource='federated.1a5vjpo0abb5s417dxotz0ks1z1m'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column aggregation='None' caption='Sales (bin)' datatype='integer' name='[Sales (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='3' formula='[Sales]' peg='0' size='3000' />
            </column>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales (bin)]' derivation='None' name='[none:Sales (bin):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[none:Category:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[none:Category:nk]</rows>
        <cols>[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[none:Sales (bin):ok]</cols>
        <show-full-range>
          <column>[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[Sales (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{5D5D1E3C-7F94-41E8-B8E7-5715F657D8DC}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='14'>Region and Sales Percentage</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Superstore_Dataset)' name='federated.1a5vjpo0abb5s417dxotz0ks1z1m' />
          </datasources>
          <datasource-dependencies datasource='federated.1a5vjpo0abb5s417dxotz0ks1z1m'>
            <column caption='Percentage of Sales' datatype='real' default-format='p0.00%' name='[Calculation1]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Sales]) / TOTAL(SUM([Sales]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='date' name='[Ship Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ship Date]' derivation='Year-Trunc' name='[tyr:Ship Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation1]' derivation='User' name='[usr:Calculation1:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[Action (Category)]'>
            <groupfilter function='level-members' level='[Category]' user:ui-action-filter='[Action3_1330F462D4A54951AB3BA8DF4566F4F3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[Action (State)]'>
            <groupfilter function='level-members' level='[State]' user:ui-action-filter='[Action6_D316C8822957461C81D96076BC642A58]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[Action (YEAR(Ship Date))]'>
            <groupfilter function='level-members' level='[tyr:Ship Date:ok]' user:ui-action-filter='[Action1_B592221AA25D42BDADF3BE42BB63DB14]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[none:Category:nk]'>
            <groupfilter function='level-members' level='[none:Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[none:Region:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Region:nk]' />
              <groupfilter function='member' level='[none:Region:nk]' member='&quot;XYZ&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[none:Category:nk]</column>
            <column>[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[none:Region:nk]</column>
            <column>[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[Action (YEAR(Ship Date))]</column>
            <column>[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[Action (Category)]</column>
            <column>[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[Action (State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[none:Category:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[usr:Calculation1:qk]</rows>
        <cols>[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[none:Region:nk]</cols>
      </table>
      <simple-id uuid='{52411D9C-8C90-44DE-96D0-97886FE8EC25}' />
    </worksheet>
    <worksheet name='Sheet 5'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='14'>Yearly Sales and Profit</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Superstore_Dataset)' name='federated.1a5vjpo0abb5s417dxotz0ks1z1m' />
          </datasources>
          <datasource-dependencies datasource='federated.1a5vjpo0abb5s417dxotz0ks1z1m'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='date' name='[Ship Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ship Date]' derivation='Year-Trunc' name='[tyr:Ship Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[Action (Category)]'>
            <groupfilter function='level-members' level='[Category]' user:ui-action-filter='[Action3_1330F462D4A54951AB3BA8DF4566F4F3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[Action (State)]'>
            <groupfilter function='level-members' level='[State]' user:ui-action-filter='[Action6_D316C8822957461C81D96076BC642A58]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[Action (Category)]</column>
            <column>[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[Action (State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[sum:Sales:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[sum:Profit:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1a5vjpo0abb5s417dxotz0ks1z1m].[sum:Profit:qk] + [federated.1a5vjpo0abb5s417dxotz0ks1z1m].[sum:Sales:qk])</rows>
        <cols>[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[tyr:Ship Date:qk]</cols>
      </table>
      <simple-id uuid='{D012CE87-EAF1-4C8F-983E-D85B6A181992}' />
    </worksheet>
    <worksheet name='Sheet 6'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='14'>Profit Generated by City</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Superstore_Dataset)' name='federated.1a5vjpo0abb5s417dxotz0ks1z1m' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1a5vjpo0abb5s417dxotz0ks1z1m'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='date' name='[Ship Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ship Date]' derivation='Year-Trunc' name='[tyr:Ship Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[Action (Category)]'>
            <groupfilter function='level-members' level='[Category]' user:ui-action-filter='[Action3_1330F462D4A54951AB3BA8DF4566F4F3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[Action (State)]'>
            <groupfilter function='level-members' level='[State]' user:ui-action-filter='[Action6_D316C8822957461C81D96076BC642A58]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[Action (YEAR(Ship Date))]'>
            <groupfilter function='level-members' level='[tyr:Ship Date:ok]' user:ui-action-filter='[Action1_B592221AA25D42BDADF3BE42BB63DB14]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[Action (YEAR(Ship Date))]</column>
            <column>[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[Action (Category)]</column>
            <column>[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[Action (State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[Longitude (generated)]' field-type='quantitative' max='-6772905.197289614' min='-15440642.283498339' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[Latitude (generated)]' field-type='quantitative' max='6937147.6131835412' min='2459954.0419744616' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[none:Country:nk]' />
              <color column='[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[none:City:nk]' />
              <size column='[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2.8176796436309814' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[Latitude (generated)]</rows>
        <cols>[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{3038F7C9-E265-4794-8847-3E7CAA771FE9}' />
    </worksheet>
    <worksheet name='Sheet 7'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='14'>Quantity Vs. State</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Superstore_Dataset)' name='federated.1a5vjpo0abb5s417dxotz0ks1z1m' />
          </datasources>
          <datasource-dependencies datasource='federated.1a5vjpo0abb5s417dxotz0ks1z1m'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='date' name='[Ship Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ship Date]' derivation='Year-Trunc' name='[tyr:Ship Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[Action (Category)]'>
            <groupfilter function='level-members' level='[Category]' user:ui-action-filter='[Action3_1330F462D4A54951AB3BA8DF4566F4F3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[Action (YEAR(Ship Date))]'>
            <groupfilter function='level-members' level='[tyr:Ship Date:ok]' user:ui-action-filter='[Action1_B592221AA25D42BDADF3BE42BB63DB14]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[Action (YEAR(Ship Date))]</column>
            <column>[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[Action (Category)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='576' />
            <format attr='width' value='543' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[none:State:nk]' />
              <wedge-size column='[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[sum:Quantity:qk]' />
              <size column='[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[sum:Quantity:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.7031491994857788' />
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-range-scope' value='cell' />
                <format attr='mark-labels-range-min' value='false' />
                <format attr='mark-labels-range-max' value='false' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{D0ADB6E0-3F48-4E59-A832-0B05D5459927}' />
    </worksheet>
    <worksheet name='Sheet 8'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='14'>Orders</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Superstore_Dataset)' name='federated.1a5vjpo0abb5s417dxotz0ks1z1m' />
          </datasources>
          <datasource-dependencies datasource='federated.1a5vjpo0abb5s417dxotz0ks1z1m'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Ship Date]' role='dimension' type='ordinal' />
            <_.fcp.ObjectModelTableType.false...column caption='Orders' datatype='integer' name='[__tableau_internal_object_id__].[Orders_F7F51850B5C248CE8137C181010857FB]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <_.fcp.ObjectModelTableType.true...column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_F7F51850B5C248CE8137C181010857FB]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Orders_F7F51850B5C248CE8137C181010857FB]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Orders_F7F51850B5C248CE8137C181010857FB:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ship Date]' derivation='Year-Trunc' name='[tyr:Ship Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[Action (Category)]'>
            <groupfilter function='level-members' level='[Category]' user:ui-action-filter='[Action3_1330F462D4A54951AB3BA8DF4566F4F3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[Action (State)]'>
            <groupfilter function='level-members' level='[State]' user:ui-action-filter='[Action6_D316C8822957461C81D96076BC642A58]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[Action (YEAR(Ship Date))]'>
            <groupfilter function='level-members' level='[tyr:Ship Date:ok]' user:ui-action-filter='[Action1_B592221AA25D42BDADF3BE42BB63DB14]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[Action (YEAR(Ship Date))]</column>
            <column>[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[Action (Category)]</column>
            <column>[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[Action (State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[__tableau_internal_object_id__].[cnt:Orders_F7F51850B5C248CE8137C181010857FB:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontalignment='0' fontsize='20'>&lt;</run>
                <run bold='true' fontalignment='0' fontsize='20'>[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[__tableau_internal_object_id__].[cnt:Orders_F7F51850B5C248CE8137C181010857FB:qk]</run>
                <run bold='true' fontalignment='0' fontsize='20'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{BBED60B5-2DEA-4FCA-9E22-41D81184073C}' />
    </worksheet>
    <worksheet name='Sheet 9'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='14'>Sales</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Superstore_Dataset)' name='federated.1a5vjpo0abb5s417dxotz0ks1z1m' />
          </datasources>
          <datasource-dependencies datasource='federated.1a5vjpo0abb5s417dxotz0ks1z1m'>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='101' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[sum:Sales:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontalignment='0' fontsize='20'>&lt;</run>
                <run bold='true' fontalignment='0' fontsize='20'>[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[sum:Sales:qk]</run>
                <run bold='true' fontalignment='0' fontsize='20'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{DE08C38A-006B-43C4-8AD6-967983E94446}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#000000' />
        </style-rule>
        <style-rule element='dash-title'>
          <format attr='border-width' value='0' />
          <format attr='background-color' value='#ffffff' />
          <format attr='text-align' value='auto' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98002' id='51' param='vert' type-v2='layout-flow' w='99030' x='485' y='999'>
            <zone h='98002' id='42' param='horz' type-v2='layout-flow' w='99030' x='485' y='999'>
              <zone h='98002' id='40' type-v2='layout-basic' w='99030' x='485' y='999'>
                <zone h='88390' id='22' param='horz' type-v2='layout-flow' w='73681' x='485' y='10611'>
                  <zone h='88390' id='18' param='horz' type-v2='layout-flow' w='73681' x='485' y='10611'>
                    <zone h='88390' id='16' type-v2='layout-basic' w='73681' x='485' y='10611'>
                      <zone h='35706' id='6' param='horz' type-v2='layout-flow' w='32807' x='485' y='24967'>
                        <zone h='35706' id='7' name='Sheet 5' w='32807' x='485' y='24967'>
                          <layout-cache minwidth='276' type-h='fixed' type-w='scalable' />
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                            <format attr='background-color' value='#ffffff' />
                          </zone-style>
                        </zone>
                      </zone>
                      <zone h='35706' id='34' is-fixed='true' type-v2='layout-basic' w='40874' x='33292' y='24967'>
                        <zone h='35706' id='9' param='horz' type-v2='layout-flow' w='40874' x='33292' y='24967'>
                          <zone h='35706' id='10' name='Sheet 2' w='40874' x='33292' y='24967'>
                            <layout-cache minwidth='240' type-h='fixed' type-w='scalable' />
                            <zone-style>
                              <format attr='border-color' value='#000000' />
                              <format attr='border-style' value='none' />
                              <format attr='border-width' value='0' />
                              <format attr='margin' value='4' />
                              <format attr='background-color' value='#ffffff' />
                            </zone-style>
                          </zone>
                        </zone>
                      </zone>
                      <zone h='38328' id='12' param='horz' type-v2='layout-flow' w='40874' x='33292' y='60673'>
                        <zone fixed-size='580' h='38328' id='13' is-fixed='true' name='Sheet 6' w='40874' x='33292' y='60673'>
                          <layout-cache minheight='248' minwidth='202' type-h='scalable' type-w='scalable' />
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                            <format attr='background-color' value='#ffffff' />
                          </zone-style>
                        </zone>
                      </zone>
                      <zone h='38328' id='14' param='horz' type-v2='layout-flow' w='32807' x='485' y='60673'>
                        <zone h='38328' id='15' name='Sheet 4' w='32807' x='485' y='60673'>
                          <layout-cache cell-count-w='5' minheight='192' non-cell-size-w='95' type-h='scalable' type-w='cell' />
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                            <format attr='background-color' value='#ffffff' />
                          </zone-style>
                        </zone>
                      </zone>
                      <zone h='14356' id='28' param='horz' type-v2='layout-flow' w='73681' x='485' y='10611'>
                        <zone fixed-size='344' h='14356' id='29' is-fixed='true' name='Sheet 8' w='21346' x='485' y='10611'>
                          <layout-cache type-h='cell' type-w='cell' />
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                            <format attr='background-color' value='#ffffff' />
                          </zone-style>
                        </zone>
                        <zone fixed-size='437' h='14356' id='33' is-fixed='true' name='Sheet 11' w='26167' x='21831' y='10611'>
                          <layout-cache type-h='fixed' type-w='fixed' />
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                            <format attr='background-color' value='#ffffff' />
                          </zone-style>
                        </zone>
                        <zone fixed-size='1247' h='14356' id='32' is-fixed='true' name='Sheet 10' w='26168' x='47998' y='10611'>
                          <layout-cache type-h='fixed' type-w='fixed' />
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                            <format attr='background-color' value='#ffffff' />
                          </zone-style>
                        </zone>
                      </zone>
                    </zone>
                  </zone>
                </zone>
                <zone h='9612' id='36' param='horz' type-v2='layout-flow' w='99030' x='485' y='999'>
                  <zone forceUpdate='true' h='9612' id='37' type-v2='text' w='99030' x='485' y='999'>
                    <formatted-text>
                      <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='26'>Superstore Performance Overview</run>
                    </formatted-text>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                      <format attr='background-color' value='#ffffff' />
                    </zone-style>
                  </zone>
                </zone>
                <zone h='88390' id='38' param='vert' type-v2='layout-flow' w='25349' x='74166' y='10611'>
                  <zone fixed-size='307' h='39326' id='39' is-fixed='true' name='Sheet 1' w='25349' x='74166' y='10611'>
                    <layout-cache cell-count-w='1' type-h='cell' type-w='cell' />
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                      <format attr='background-color' value='#ffffff' />
                    </zone-style>
                  </zone>
                  <zone h='49064' id='44' param='horz' type-v2='layout-flow' w='25349' x='74166' y='49937'>
                    <zone h='49064' id='45' name='Sheet 7' w='25349' x='74166' y='49937'>
                      <layout-cache cell-count-w='1' non-cell-size-w='1' type-h='cell' type-w='cell' />
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                        <format attr='background-color' value='#ffffff' />
                      </zone-style>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
            <format attr='padding' value='0' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='2150' minheight='2150' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='55' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98002' id='54' param='vert' type-v2='layout-flow' w='99030' x='485' y='999'>
                <zone forceUpdate='true' h='9612' id='37' type-v2='text' w='99030' x='485' y='999'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='26'>Superstore Performance Overview</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone fixed-size='107' h='14356' id='29' is-fixed='true' name='Sheet 8' w='21346' x='485' y='10611'>
                  <layout-cache type-h='cell' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone fixed-size='107' h='14356' id='33' is-fixed='true' name='Sheet 11' w='26167' x='21831' y='10611'>
                  <layout-cache type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone fixed-size='107' h='14356' id='32' is-fixed='true' name='Sheet 10' w='26168' x='47998' y='10611'>
                  <layout-cache type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='39326' id='39' is-fixed='true' name='Sheet 1' w='25349' x='74166' y='10611'>
                  <layout-cache cell-count-w='1' type-h='cell' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone fixed-size='277' h='35706' id='7' is-fixed='true' name='Sheet 5' w='32807' x='485' y='24967'>
                  <layout-cache minwidth='276' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone fixed-size='277' h='35706' id='10' is-fixed='true' name='Sheet 2' w='40874' x='33292' y='24967'>
                  <layout-cache minwidth='240' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49064' id='45' is-fixed='true' name='Sheet 7' w='25349' x='74166' y='49937'>
                  <layout-cache cell-count-w='1' non-cell-size-w='1' type-h='cell' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='38328' id='15' is-fixed='true' name='Sheet 4' w='32807' x='485' y='60673'>
                  <layout-cache cell-count-w='5' minheight='192' non-cell-size-w='95' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='38328' id='13' is-fixed='true' name='Sheet 6' w='40874' x='33292' y='60673'>
                  <layout-cache minheight='248' minwidth='202' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
                <format attr='padding' value='0' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{96DE29C0-271D-4A6B-9AC3-FC683D3C8558}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[none:Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[none:Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1A9400EE-701E-4C3A-A1CA-AA6494D04291}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[none:City:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[none:City:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[none:City:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{158A8BC7-380A-4979-921D-7989D99EA334}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[none:Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[none:Category:nk]</field>
            <field>[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[none:Product Name:nk]</field>
            <field>[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[none:Sales (bin):ok]</field>
            <field>[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[yr:Order Date:ok]</field>
            <field>[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[yr:Ship Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{094955A5-99AB-48E7-B988-EDD83E699C81}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[none:Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[none:Category:nk]</field>
            <field>[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BB35F40B-DE43-4A09-B612-118A218A5AA6}' />
    </window>
    <window class='worksheet' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[:Measure Names]</field>
            <field>[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[none:Category:nk]</field>
            <field>[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[none:Product Name:nk]</field>
            <field>[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[none:Segment:nk]</field>
            <field>[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[none:Ship Mode:nk]</field>
            <field>[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[yr:Ship Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{18644C66-DB34-4B5B-8D61-080A5F89B274}' />
    </window>
    <window class='worksheet' name='Sheet 6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[none:City:nk]' type='color' />
            <card pane-specification-id='4' param='[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[sum:Profit:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[none:Category:nk]</field>
            <field>[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[none:City:nk]</field>
            <field>[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[none:Order ID:nk]</field>
            <field>[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[none:Postal Code:ok]</field>
            <field>[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[none:Region:nk]</field>
            <field>[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0584FD4C-EE90-455A-8EB3-4CA731638745}' />
    </window>
    <window class='worksheet' name='Sheet 7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[none:State:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[sum:Quantity:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[none:Region:nk]</field>
            <field>[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[none:Segment:nk]</field>
            <field>[federated.1a5vjpo0abb5s417dxotz0ks1z1m].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6AFFEF1B-0734-4B01-9FB1-FD2B81C99359}' />
    </window>
    <window class='worksheet' name='Sheet 8'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{917F1222-847C-4CE7-9224-7F34F70B57DA}' />
    </window>
    <window class='worksheet' name='Sheet 9'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{A869EAEC-8B6E-4EF5-B262-EDC8026FD02A}' />
    </window>
    <window class='worksheet' name='Sheet 10'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{9F1C53F9-479E-4D28-99EE-0E64FF2B88B2}' />
    </window>
    <window class='worksheet' name='Sheet 11'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{4743DACB-8122-47AB-91A6-0E8884E6D3B1}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 10' />
        <viewpoint name='Sheet 11' />
        <viewpoint name='Sheet 2' />
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 5'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 6'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 7'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 8'>
          <zoom type='fit-width' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{842CCB82-B046-41F3-A4C1-626F484D80E3}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      kkL8SJ+2sVQAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='49' name='Sheet 10' width='144'>
      iVBORw0KGgoAAAANSUhEUgAAAJAAAAAxCAYAAAA1BiDzAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAMz0lEQVR4nO2bfVBU1RvHv93YF8KFlXcZtGBEkkg3Q4bKSYd82SFiUJDohVAGl0GyGZGY
      hjZ0GrIZLGcTWqkpQpBpYEhWcnA1aMgccmhoWCMiU0GUDWFAhBZY2I6/P3b2yI1lX7hr1m/u
      57/DPee5Z8/53uc85zmHB+7cuXMHPDwLhLnfHeD5b8MLiIcTvIB4OMELiIcTvIB4OMELiIcT
      vIB4OMELiIcTvIB4OMELiIcTvIB4OMELiIcTvIB4OMELiIcTvIB4OMELiIcTvIB4OMELiIcT
      vIB4OMELiIcTvIB4OOHmaoOEEPT29uKrr77C+fPnMTg4iJmZGQCAl5cXZDIZXnrpJaxZswYM
      Y1+/t27dgkajQXNzM3p6emA0GgEAHh4eCAsLw/PPP48tW7bgoYcecqqPnZ2dqKurw48//ojh
      4WEQQiAQCODv74/o6Ghs27YN4eHhDvVxPs6fP4+8vDyYTCaH2ygUCigUCofrDw4OQq1Wo7Gx
      EY899hhKS0vh4eHhcHtCCHQ6Herr69He3o6hoSEQQsAwDHx8fLB27Vq8+uqrWL58udWxeMBV
      /9ZDCMGFCxfwwQcfoK+vz279lStXori4GEuWLLH6fHp6GseOHcOxY8cwNTVl05ZEIsG+ffsQ
      Fxdnd8L1ej3eeecd6HQ6u32Uy+UoKiqyW28+NBqN0+0dFdD4+DiOHj2KhoYGOj6PP/64wwIi
      hODUqVMoKSnBrVu3bNZlGAbr1q3DgQMH4OnpyXrmEg9kMBiwf/9+nDt3DoQQh9r8+uuvyMnJ
      QWlpKYKCgljPpqenUVRUhMbGRodsjY+P491334Ver0dmZua8Iurs7ER+fj4GBwcdsuuM57DG
      1atXObW3xsTEBKqqqlBVVWX3w5qPwcFB5OXloaury6H6hBCcO3cO+/btg0qlYgnUZQLq6uqi
      4hGLxZDL5UhOTkZISAhEIhFmZmbw+++/Q61Wo62tDYQQ9PX1oa6uDm+88QbLnlarhVarpeWg
      oCBkZmZi3bp18Pb2BiEEQ0NDOHnyJL788kuMj4+DEILq6mrExMRg1apVc/qo1+tRWFhIxcMw
      DKKjo7F7926EhYVBIBDAaDSiv78fTU1NOHXqFKcxIYRgYGCAljMyMrB79+4F25uamkJDQwOO
      Hj2K8fFxTn0bGBjAtWvXaFkikSAlJQVyuRzBwcF0LHQ6HVQqFS5dugQA0Ol0aG5uRkJCAm3r
      0iCaYRgkJCTg9OnTUCqVePTRRyESiQAAAoEAEREROHz4MDZu3EjbtLS0YGRkhJZNJhO+/fZb
      KkaZTIbjx48jISEB3t7e9D0BAQFQKBQoLy+nHsxgMKCpqWlOvwghqKiooEurUChEfn4+jhw5
      goiICAgEAgCASCRCaGgoFAoFNBoNCgsLFzwWBoMBN2/epOXQ0NAF2wLM8VRxcTEVj0AgwAsv
      vIDc3NwF2xSLxVAoFDh9+jSys7MREhLCGovo6GiUlZUhMjISgHkctVotjUMBFwpo+fLlOH78
      OAoLCyGRSOatJxQKkZiYSIU1NTXFWiqMRiNu375Ny8nJyXPW3dmEhIRgw4YNtGxtebp69Spa
      WlpoOS0tDdu2bbMZLzEM41Rg/ncmJycxNDQEwDwZFvFzxSKckydPYv/+/fD391+QnZiYGNTW
      1kKhUEAsFs9bz9PTE4mJibQ8OTnJmi+XLGG+vr5QqVQO71jEYjHc3NyoklkdcnODu7s7LTu7
      zi9atGjO31pbW6mXW7ZsGZKTkzntrhxhYGAABoMBgHnHGBgYyMmeQCBAYmIicnJysHjxYk62
      IiMj8f777zs8BrPHlBDCinNdMooMwzg1IR0dHXRwvby8WEGZSCTCM888Q+3V1dXZDHo7Ojpo
      vOLu7o5NmzaxnptMJvz000+0vGHDBvj5+Tnc14UyODhIf+OiRYusCtsZ1q9fD6VSyVk8gHPz
      RQhBa2srLS9evJj1gf/jicSOjg5UVFTQ8lNPPQUvLy9Wne3bt0MulwMAuru7kZaWhrq6OupF
      CCG4efMmSkpK8Prrr2NsbAwMwyAtLQ1r165l2RoZGaG7ITc3N6xZs+Ye/rq7zE5lBAYGOpWb
      +Tcxe0PDMAxiY2Ph5nZ34XJZHsgW4+PjeO+991jBsVQqxeHDh63umGbz22+/IT8/H/39/Vaf
      r1q1CgcPHpx3ibh48SL27NkDg8EAsVgMb29vDAwM2Ew3WPIehYWFkEqlDv7KuxiNRuzduxdt
      bW0O1WcYBs8++yyUSqXT72tqasJbb70FwLk8kC2s5coeeeQRqFQqBAcHs/vO6U12sOQPtm7d
      iqamJjppS5cuhVqttimeqakpFBcXIy0tbV7xAGaBpKSkoLKy0m4OampqCnq93m49S7/z8vIw
      NjZms641BAIBZDKZU8tES0sLMjMzcePGDaff5yoIIaitrUVKSgpLPKtXr4ZarZ4jHuAeHGVY
      sOZ1LNv83NxcmzucsbExvPnmm2hvbwdgzlNkZGRg8+bNNH65fv06qqur0djYiImJCZSWlkKv
      1yM3NxdCoXBe2yKRCDExMZDL5ZDJZPDx8QHDMDAYDPj++++hVquh1+sBmMX59ddf45VXXnHq
      tzMMYzOjbMk3nTlzBrW1tXRr3tvbi7KyMhw4cIC1TPwTWPM6YrEY6enpSE9Pn3dM74kH0ul0
      ePHFF1leJygoCCqVCgUFBTbFQwhBaWkpFU9wcDCqqqqQlpaGgIAAGgA+/PDDKCgowEcffQRP
      T08QQnDixAmbCUB/f3/U19fjww8/xKZNm+Dn50e9hIeHB+RyOSorK6lnJISgqamJBsOuwpJv
      ys7ORn19PcsT//DDD+jp6XHp+2xBCME333yD1NRUlnhWrFiB8vJy7Nq1y+YH6XIBabVa5OTk
      sDK+CQkJqK6uxtNPP23XrV+5cgXNzc0AzEHv3r17rbpOC08++SR27NgBAFREs5cdqVRKc05/
      zzFZQyqVIj09nXqA/v5+DA8P2/7RHJBKpcjPz6e5rtu3b7OyxPcSQgi++OILvP3225iYmABw
      N7lYXl6OFStW2LXhUgFptVoUFRXR3I2/vz+OHDliN7k4m2vXrtFJ9vb2xsqVK+22kclkNHDs
      7+/H9evX6TMvLy/4+PgAMC+rjnzdYWFhNPFnNBoxOjrqUN8XypIlSxAQEEDLjhxGc8Uink8+
      +YSuEqGhoaisrLSbXJyNywTU19cHtVpNxRMZGYmKigrExMS46hUOQQjBX3/9RcsSiYSK0HJj
      wF4QbTKZaHKTYRg8+OCD967DVnBV1toWOp2OtfGIjY1FRUWF00cuLhGQ5azJEnwGBwejqKho
      QWl2S5YaMLvzy5cv220zOzEpEolYW2GGYbB+/Xpqs7m52e5Vjp6eHroMSiQSpxOPExMTmJ6e
      drj+5cuX6e7Lzc0Nvr6+Tr3PWSYnJ1FWVkbHTCaTQalULujoxiUCunLlCr777juzQYZBRkaG
      zbjFFuHh4fRw1Gg04tNPP7WZif75559RXV1NyyEhIXMmPCoqinohg8GAQ4cO4Y8//rBqb3R0
      FJ9//jn1QJGRkU5PaGtrK1JTU3H27Fm73m50dBQff/wxJicnAZg3G+Hh4U69z1na29vpR+Tu
      7o7s7Gyb5422cImAfvnlFxq3+Pr6IioqasG2/Pz8WBfDOjs7bWais7OzaZArFAqRlJTESrUD
      5h3Wzp076W7i0qVLePnll1FTU0M9jdFohFarxWuvvUbvyXh4eCA1NdVq4B8VFYWoqCjExcVZ
      FXhfXx8KCgqwZcsWHDp0CN3d3azd3MjICGpqarB161ZcvHgRgPnjS0pKuudHLW1tbfQDCQ0N
      dShYng+XZKKLioqg0WgW1NbDwwMlJSWsrayzF8oA8+BnZmbOe6HMWtC4UHtjY2OIjY0FYPYY
      n332GWu5np0ddoa4uDgolco52+bZ2fSFMDtD7WyW/O/4+/ujoqKC/l6XeKA///zTFWYoQqEQ
      SqUSWVlZDu0GJBIJCgsLbd5GZBgGO3fudGhHKBaLsWfPnnntdXd3U5vx8fFzlrjY2FgcPHgQ
      y5Yts9t3y/uysrKsisfVmEwmuly6gn823ekEQqEQu3btQnJyMk6cOIEzZ86gv7+fdal+6dKl
      SEpKcvhSvWXCY2Nj0djYiJqaGty4cQMzMzNgGAaBgYGIj4/H9u3bbZ56nz17FgAQERFhdYlj
      GAabN2/Gxo0b0dvbC41GgwsXLrD6LxKJEBISgueeew6JiYkuOWW/H/wjh6n/TwwNDSErKwvD
      w8NQqVR44okn7neX7iv8/4U5SVdXF/R6PRITE7F69er73Z37Di8gJzCZTGhoaIDJZMKOHTvu
      +a3G/wL8CDiBXq9HV1cXhELhfzZmcTW8gJygra0NQ0NDiI+Pv99d+dfwPxPBdkPVzlGHAAAA
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='49' name='Sheet 11' width='184'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO292W8jebbn94mNweC+i9rX1JaZtXR3dfd0972DMe4YMIwBZgYDGPBgNniB
      H/wPGAaMfvGj3/xmGPaDYcAwBgY813euAQ8G9u3bdXuqa8lFUmqXKFIkxX1nMDY/ZHZXZWWm
      MosSpWQqPm8S+Y04QcZhxDlxfucIjuM4uLjcUcTbNsDF5TZxHcDlTuM6gMudxnUAlzuN6wAu
      dxrXAVzuNK4DuNxpxsoBLMsaWus4DqZpDq2/itbV367+su9eHmaDp6enzM7NU69XiUVjb9or
      5UqVeDxKrdYgFou+9HKr0cAfDr/wQIfc6RG6oBEL+wn6/SBKSKLwkuZfPv6K41plGJNdXF7L
      UA5Qu8iAJ0ireo5g9jkr1JmZjKP6g+RyFRJhlXAiRbdeotWoosUmOdrbYSBqpONByqUqOAJx
      e4DkjSC3czSFMCuTYSrVKvm9p9SkCAvTCdLJGJVKm2Qyiu042O6Da5drZKhbIH80Tb9ewHIc
      9nf3cfQm1Xafve1dGp0mpVodUYDZxSUK5TpxzwDDEyJIm9PzApHJWRy9ydODLEGvQqfZIRKP
      oigK5XKJeHyClbVlpEGHo719HC1w3cft4gIM6QCq6mV2MkFXd0gm4whqgPTEBLphsJz0YXlC
      CIAgeUglosjeAHq9SLHtkIiGCWoeApEkqzMxSvUOifll8jtfs3t4ilfT8IcDnB0cE5+aJldu
      kgoo13zYLi7PEd7nYrhG+ZyW6WUm/TzOOCgV6RjG0NuzbQtRlG5c6+rfX/177QDfp93Igd0f
      Wm9aFrI03Id4Fa2rf3/1QwXB36ddzmOHJgh53nxHtfX4EasPPkL5Xmbn++Tz50xOTr32te3f
      /LdUcr+5kq0uLt/lWhyg36hh+VJoZpOnu4f4wwkUq03P9rC2uoyjN8ExOD2vI3ULNLs9JmeX
      KGZP6Jsiy/MpsrkiE3NLVKsVzH6HSqPPZDpKvlhjZW2DgPdaTHVxeYlrfRBWyhdYWH+A2Wuh
      er3Y5gDTcrjInlHXBQrZI2xBYX1thVruhNDUIgFV4vjkGEGAgT4Ax+D4+AwBE0fwoMjQ6w+u
      00wXlz9yLQ6gBkOc7W0hh6JkdrfwBqM4to0DiAI4WphffPZjlmbTBEIhJEkhMTlNPXfEeanK
      0vw8FiKaVyUSTTE3N4WkqMgi2JaNJI3VA2uXMeL2gmDLYHdvHyUQZWl28p0kzeoxjtUdfpdX
      cCbLspCuEIS5+tvWv/67H6ssUHP/DLs9fBbItizEIT/Eq2hd/furv3Jkub/9mK7pEIolUJCZ
      mZlg0G1jIFMqX7AwN/fS+3PZLNMzMwD0qmfUpTST4ecPuvL5HMnUFLIk0Gg0CIfDL2nL//Yb
      urtnVzXZxeWPXNkBTEtkbX2Z/YNDOpUGuUyG+bkUQiBKr9fj9PAZxUqHpYUpMucX2Ij02jWq
      TZ3FtJ++2uZvtg8QFZlIUOHi4gItksbuN7H6bU4yGaZWf0Q6rF7H8bq4vMSVo0tD73BwdMbq
      6j0S6VnmklF008S2HcCkXG7QrhfIlpqsb2wS8Cpkzs7QvBoIAA6x9AzJgIIhamxubiBYJoZp
      clEugd2nXGld+UBdXF7Hla8AMwsrRBJxRCwSyQgKNpYoIHm8qKlJWlKJYCzGzPQ0Jwf7hONJ
      Hob9lBo6/kgMDxKP906YXVxiJqgiijLJeATT9IHRpapoxOP+6zhWF5dXuP0g2DZp900CPu9b
      32oaBtIV6kFM00SWh/P5q2hd/furv30H+AHs/rv/j1blYmi97diIwnB3fbZtI4rD3zG6+lvW
      v+G7H8ql2qUztjJV4okEi9MpdMNCUz0MBgMQJVSPwuOv/x2CrDG3uILmkRFFgYE+QNW050+I
      bfCqHvq9Hh7Jpj6QCSgOgqQgCQ4D00ZVJPoDE03zIgDHT37P+d6ToT8EF5fvM5QDKJoPwbpA
      VVVK56c8frLFvU9+RimfR5JlfvzJQ2zLQpIFjOox31yIfLQY5fGjx4SnVzFqGURFIxYJ0zMd
      ZiMy510f5ZMd7m08oFbIEohPoNcvEGQRb3iW+ano2w1zcfmBDHVNcQSFjfsbFLIZyrUmi9Nx
      Wl2Tqdl5woHn9/KyFuThwwcEvApLq2vUKmUWlpfQO12iiTRTqRjd3oBUehKPLOIICmurKxTO
      sziiQioewXQEJlIxdN2tBXIZDUPFAJapc3qSIZ6eRTBatLoDwtEEiiximwaaz0e70ybgD2AP
      ugxEH7LV4SxfIZFIIEkgCQKS4uH87JTkxASWoNAsneMNJ9FEg1JDJx3zkS02WFyYQQD+6l/+
      z5RO9oY+WMcB4fJq7JFoXf37qx+rIPgq9SCO42BZlpsFuoP6y777Gy2ybzfrOJJKwK/xNmce
      DAZ4PJ6X/vdv/u+/5DybHXr/juMgDPkzchWtq78Z/T/5T/7TH/wDeWMOMGics3PaYTIeRPMI
      ZLIXzM/PkD87QYtMcPr0S4KzixSPD5lfvU+jcsH66hKZXImFhTlEAXJnGfafPbspk13GjSFu
      Zm7MAZRgEtXKU2sKVM6P6PZ1eraI1ahycVxgLhImPZmmW6uQTsZoVC7YevQVHX2AjpeNxdRN
      mepyh7ixlSam3scbCNNvN/BofhKTc6T9Fi3Lg0eW8KgiFxc1FMGhVG0A4PX5SabnmE6FbspM
      lzvGjV0BZG+A2WmRhYUFFEmg19NRNS8/CiWRFAVZEtEHJp6JKIblkIqtIYrP36dpzytBF5aW
      0TTf0DZc6UnwFbSu/mb0w8QYbhboHRnnLMhd199qFqjZbBIKhWg1mwSCoTfnch0Hh8u9uHf6
      P+F0d4c3xn0Q8N7qJf8yvsX/YvjtD8nIHeD07IyH9++TPcuwsDDL0XGWucUldF1Hsi0UVeTk
      NE867ufzx4f86m99RjGbIZaexenXKdfarKxvoEoCjtnGMWqjNtnlFnDM21nzMfoYwOjx5MkT
      iqUaNnBvbZW9Zzs4ig/VHOCPaliOg9cfZmFpGb2cJTZ3j4vjPSRZYHnCR642YCnhrghzuX5G
      ngVStCAPHz5kfnqCSEBja2sLXyhOv1EmV6ygev0IVpd616JbyeOofk53t0DR0DQfisfzypwA
      F5frYqyC4H75dwjm8AMyrlJTfuv17B+4XvTEUGI/f+PrYxsEXyem72OctxZRXKI3LWR5yOa4
      V9B+iHpZEtHUd29bf9Us0Ki4EYscx+b0cB9D8pMI+4jEYghYNBpdwuHgO2/nv/vfPuer/eII
      LXV5V366PsV//U//9LbNuDI34gDNUhZbS7CUjvDs8TdkzjLMLC7Rb+k0yuf08BJWbfLlDutr
      C+zvHiBpIRJ+kXy5zvL6Q4Le4X+9XFzexI2UQpiGgUdVkSQJbyDM+uoS7UaVWqVO2xBYW56n
      0+nSK+c5PDlleu0jHKNLudHhowcrZE+HrwB1cbmMG3GA6MQM9dwBzw5P8fn9iJKM5tUIhgNo
      osnuUQbLsvAGAiSSE5zuPKHe7hPxqzx+skd6+t16h7q4/FDeuyyQ0Wuxs39MJDHJ3FTypdd2
      T0u0+kOOSHLAsocvpbj95q7vlz7i97Iy84YRua/hfS2FeO8c4DI62QucYR0AB9uyh26w+r6d
      gN9FDmp4Jy4/Gce5lueq+htPgzrWgO2tHeRAlLWlF81xjRaZksXcVOS1mko+T3ByEs9rX31O
      8S9+5zbHfQ2RH68y8x//2W2bMZaMxAFKuQzxuXukIz6OdrdodHQWF9I02zaHBw1Ciklf8XKR
      v0Af6MheHxOqwGm5SDSSxDZsNHuA7Ze4KLZYXXdHJLmMhpEEwZIoMjBMbNuma9qsL01RrTcB
      6Pf69LsddNNm6d4qwXCEWFBDUjQ27j+k2yjT6/fpd7qo/iCq7NC+wkwAF5fLGIkDxKfn0Stn
      HJ7mSEVDHGRrTE/NkIyF8Kk2Vd0hGgrh9SgkE3Gi0Sj+kI/9p0+ZWlhFkwyaFki2jeMI+HyX
      3Ri5uAzPWAXBerODaA9v7oc6J1jwyMhvaS48zkHsVfUfTC1Qr97D6plDqp0XBVnv36T46EoK
      8S2zy4T3tJZm3BnJJ5o5fEatM2BydpFU9DW1PrbB57/9G7w+H/OrD5Cs/ivjkF5H7fCCbuHD
      G5YRWUyAOwnzVhiJAwiCgI1IwOdl+5svyNdN5iaD9PoDlOAEGwspgtEJ7q8v8OzwFMfUOT/Z
      I39RY3ljg2KhjGFD0i/Q0Q2SM2vMuJ0hXEbASH52oqkpNpamebb9hI6tIuo9TMXL5uYmMt/e
      w7fqZWQ1gOM41BodllaWcHodZlfW0RSBgSWydm+eTqs9CjNdXEZzBbAHPQ4LVTbuP+Ti7JiJ
      5AbhaABRUkinYiBIaLJJuQPLc2laTY356UkyhRqLc9M83XqCgYf15Vky+Sr3VpYAEGUJyTP8
      fbgDQ68muIr2OvQuo+G9ywLZlkEue05sYgq/9+UFF25bFFc/DDeWBbIsE9sGWZZf6YDxpiVx
      juNgmiaSJCGIIqKkMDs/j23bL163cRAQBYG/3Plzso3M0Pa9T42xpsIz/L0H/2Do7blcD9fm
      AI7Z58svHxMMR1hYWqDbbOALRhEFC70/QB/0CQUDtJptIvEE/XadnilAu8QXuwV+/OkGyViE
      crlGNJFgd2eL1ZUVSme79CMbLCVUnuYf8Sj/1XWZfKtsph+6DvAecH1XAEkh5FfpDUwaFzna
      hsxZfhe712Bq+T7lYpGLfI5Y2Mf+SR+j1aI76LKQCDC/uEixWKR9keEoe0FsehUvDvt7+0R9
      bnrQZXRc39ll2wSjCXxOl3rfQRRBEmWCsRTp+PMcv0cLMJlOgmWBIGCaJl6vj0gkjAAIosL6
      w09ZmUu/2KSDbVvXZqKLy/e5viuAKBPQVLT5NaxOlcYA1tZW4MUJvLKy8vweWJFYmvOz/egL
      dFMmmJjEL4jEgyuoikSpVMHr9bCysvp8hnBXJxl+HgzPRucx7OHnhb1PAzIWootDb8vl+hhJ
      FshxbEB44wnjOA6WaSKIEtIPeALqZoFc/TDceC2Q8JZsSamQwxS9TKYSf/yfMejjiBLmwMbn
      e30bxP9nb4fzVmNou96XK8C/+Okvh96Oy/VyK9VVuWKJ6WSEg4xJSNZpWwphqcfAF6KW7ZJK
      iDR0gbmJCAfHWZZXV1FlkVqvS6HVvA2TXT5QbiXFIiseUtPzmN0qrVaL3a1tvq3xdGg1W2Se
      bZMpFrAFEcNwA2GX0XArDtAoF3j8zSNC8TSVag2PJGEBAgICFuVqHVUR8Wgh9FaZSr1zG2a6
      3AHeu1KIy/gyc0K13x1a79gOwpCdpq+i/b7+765u/mD9OAeht63/YBbEfDI9e2ezQC6j4Xq+
      EatPqWGQjL28+KXbbqBoYZR3PGcH3SaGoDIYDHAsk1gs+tLrv/tf/i3lg/y1mHzdBCci/J3/
      8u/dthkuP5DrcQCzTSbbolXJYUo+JqMaJ7kLQn4PgYiDbTuU8mfE0nNY7TK1ns38VJzMWZ5A
      NIFXlgh4RTrdAWoA8qUKdr+LIpicZgssrG4SUCUcx8G5wprgUfK+2uVyOdcSBDs4CDh0e32O
      T07I5ktsbm4gWX2+fLxLJODBtBxMvU2tLzAblTg4q5CeXcLotKlUSuTOizj9Bu3Btxmf/f09
      LMugUq5fh5kuLq9wZQfQ23W+fnLM9HScgWGi+TRiIR9b29sI3jCfrC+Qu6gjSyKdvoVstjnM
      NUknQiiKhOr1MhML0BV9eFUvHlnGq6pomkYqmQRRIRz2X8exuri8wlhlgQq7WfQrNMmyLWvo
      3qBv03o0D5Obc298/baD6Lus/2CyQMkZH9Kl3UPfjMPzWqJr7Qske0F1F+uPMzfqAI9+/zl4
      I9zfXEd+kRPvtluo/iDS91Lslt6la0tgGgSDgef/3PtzqB8MtW+Bqx3sa7XpT2DjH15hqy63
      zY06gKwFWFtMsH+QQzBq2LKPRm6fwNwmAaeDJQdw+nXaA7g3l6TUNtl59ISf/+nfJh7y3aSp
      LneEGy+FEASRQbdCrtBkYJqkJ2dYXpijb1gsLUwysBXmoz5KtTq2EmBhYdE9+V1Gxo06wKDb
      YvuoxMb9DdJJH5qmEYlHOD3JEI8nEQUZn8fhrDlgIh4nqHmR0ak2hy9/cHG5jLHKAlntCyR7
      uAkxDs87U0hDDnt+bRCs+ECLvl7wff0YZ1HGXf/BZIH6JyVoDL8gZthp596HDyDoA7eW54Pj
      Zr5Ro8Nff73Hzz9Z46zUZGE6/U6y0nmWcHoGz4tztvWv/pzBo0cjNPT1pH793yCvrNz4fl1G
      z804gG2hKTZnhSrdwYCtR1/TNQV8fo2Uz6ZoRNHooIoW58U6UzMp8sU6kYBGo7dPfGKWaODy
      /vcuLsNwY0FwMDFDp5LDtnuc5Sp4NS9xFY6aMh49iy1plMp1us0iza7A6sYmitOnUG7i19wJ
      MS6j4WauALKXZERGDS1RHShE76t0LIXEbIpBvokmePBPTlKxO/jDYeLJKF6PRGJynslFD61m
      h/jr5gy4uFyRscoCmYPB0FkcuMKYIkm60mIaGO8syrjrP5gskNH4HaZxMbTetm2sH+BAcnAT
      Obgx9P5c3n9GMyLpYItCw8Cr+QkHPMxOpTk4OCKWjJA9rZCcnsInGRRKdXyajC+cQjJaVDs2
      c+kwmVyRYDSJXzI4OdghsPhTFuIqZu1LnM7TUZj8WgTB4zrAB85oBmTYNv1uh3A8SatVI3fY
      ITm/jNivEIgkaddKNG2LdEigKCbRS3n6/R7poELmvIsQnKRWzlExHVaX5sjao7DSxWVEWSBR
      Ubl/f51es4GNgD/k52h3l97Awe/TUGQZRfXiUWS8qhdZEnGMHifFJgGvgs/rRZYVHKPL3lHm
      lVkDLi7XxVgFwb2L/xfBKA6tt20H8Qe0NpGDD5BDz1uYjHMQeNf1H0wQ7In/6tbaorh8mNzY
      2VAul4jFEt/7BXZo1JuEI2+fEQxgPjnBrl+tMvRdSunkz+4h+N0nz3eBG3OAbPYMTVU4Oskw
      Mb1Ir3aOKQdwBn26nTZej8hZocby8jxHBwdEUzNY3TKNZp+V+w/xKe6kGJfr58bOKlEU0btd
      LAeOD3bo2jJLc5PU8keUuzbmYIAgOBROj5i695BGucDAgs35CIXGcCXQLi5v40YcoJA9xsSD
      aegIooQ/GELQ2xxl8kwubhBwuliSgjPo4Y0kOdl5hKwF0TQfguxFld00kMtoGKsskFFuIJnD
      PxSw3nFBjJAIIcgvB9vjnAW56/oPJgukqwKOMvzVwLJA+n77ie8hiiJ+efhp9C7jxcgcwLEt
      9na2wBtmbXkeAGvQpdzsM5GIvVZTLpeIxhJIokCj0SAcfjk79OzxI2rl4WuB3gWv5uNP/v3/
      YKT7cHl/GJkDtIqHqKkVFpIamcNdKo0OswtzNFpdep0mPo+MhMlBvgnmANmjEfY55HI5oqlZ
      LL2FpXc4y+WZXf2ImF8Zlakud5iRBcGO83whOg60ehafbMyQyz1vcttut+n3Ogz6XWbvbRLw
      BYj7VVA0Nu/fp12r0O50aDYbYHUpXLhzwVxGw8gcIJReRr/Y59lRhljYyze7BZaXJgkHA3gl
      KNY6+IJRfIpANBohEA4R9qlsb22RnJomFo0iywqSGiAceP3USBeXqzJWWaB2q4ljXyEL9A5z
      hgVRJBB8td/nOGdB7rr+g8kCHTWPaPSHnRXgvGiL8rIDzEbnWIgtXd04l7Hkxh1g68vPSa5+
      Sir4w2tt/vX2/8mj/FfXas/ff/iPXAe4w9yoA9hGDykQo5LL0VMGJGfucZY5oV0+Jz61SLVU
      wEIhEVGodSVmJgKcHp8ws/4TJiNucZrL9XOjFWa14hmlWpvCxQWmaWIaA3q6QSiRZjLmwx+b
      JK5J9FHY3FyjWiqjiBaVavsmzXS5Q9zoFUDU4vzyZ6t06xVMUSB7dsZkegKvIqIGQvjKNaxw
      kpmQF0UUSCYTVJs+4nF3RJLLaBirLNC7ZHHexLjPCXb1bhYIO18F3Rxa73yvLYq4MIEguesM
      7jI34gDls112zjt4VQ+RgMpkegq/30e/20HyaMiCTVc38Gsq/b6OICt0Wk3C4RCiJGFbDrIs
      YZebcMUVYd99iiDOpcCte7vT3IgDODwvMpOw6DTr5PQWgidKb9DHMixEo0Gx3GR1eZZCz4NX
      NFBEBw8D9k8LLNzbIBZ0z1SX6+dmrv+CSDyR4uHmOv5QlLnZSQY9HX8oiiTYGI7Ix59+Sjjg
      YXpukYD2vPRBkhV0vT/0fb+Ly9u4kSDY0Hs4kopHFun1eqiKhGGL1ErnaJEUmmiSK1aZnkxi
      SyqOoT9/aisIeLwqva5OIOBj8OwMoTX8nGAch+82GZI/XXpl4cubGOcg8K7rLwuC3SzQOzLO
      J8Bd199IFsgyDWxBQnmHrIrea1NvdQlHYng9bzZhMBjg8Xw7G0D/7X8PF8P3BnUch8GLK4By
      /++jrP+HQ2/L5cPg2hygWcrQUaeYjqrkTo8JJKaRnT7FYpX55UWq+TO6jsrC9AQnpxki0Rhb
      WztsrsxSqHWZn0pwdHRMem4JcdDioqGjd2vIkpf55SVkAezSM5zM59dirzTzk2vZjst4c+1B
      cLN4zECNc3q4y8nxCRMxie1nx9T7Eo1KAQDHNCjkz5FUL19//RVne484q7RotTs8evyYg5Nz
      JhJRBvqAVFTiNN+6bjNdXIDrdADbJnNyRGcA1WIOExnVF8Dv05AEiVa9RO0P835FEZ8/iKX3
      CQSCpOeWETpl8PgQRRBtg3ypgtcXwKd5EcYmSnEZN67tFigyucSnsQGKx0NiwkSUFUQBEGBt
      yWB7q4TmDwBwb3WdgWGieFREbAaGhepRmDAMJFlGxMGwHBRZQhBgwfv8vl2a+Qx8kaFtdGwb
      4cWTYClx78rH7DL+uFmgd2ScsyB3XX87tUCOQ/48z8TUFH/oh9tsNBEEB18ghPT9NuWOg+04
      lw6y/vJ//w3V4+Hbo3/3McAv/sXfJZR+tynvLh8uI3MAy+hwsL+PJxSHfo2O7tCqVZmaSmH2
      GuxmCgSjCYKyQTZ/QTQU4qtnx/zq559RzJ4STc9i92pU6x2W1zfxygJGf4DevsKDsO9gX2Ft
      scuHw8hKIfKHu9gemaOTLLlsltRECoByqUC/Xccbn6XbrJC/aLCc0uhKQRaWltErWeLza5TO
      z2i0u6xM+jmvD0ZlpssdZ2QO0JWC/O1f/JKwahGOJvAqEopHQVE8iLKCpnpQPSqSo/Ps8BQk
      hV6lAN4AJ7tPETw+vJoPWfEg/4CpLi4uP4RbD4LzmSMKF1VWPvoRQc/l/ph9fEy/MXw59POu
      EM/3MfvpEmpAe2ftOAeBd13/wdQCDdpdxCGtdQDrxYcoKDKS1/NWzXcZ5xPgrutHmwVybI4P
      9uhZEqur95Df8CN+sveM1NIqvu+8odvt4vP5Xvv+1zXHzf6v/4bu7tmVTY7+dIPp/+jvXHk7
      LuPPlR3AMXoUaj0++WiTQbvK9skZqelFKtk9DMHL/QcPkB2dTr/DWaZIRO1TLLcIx2JsPX7E
      p5/9lFoxD2qAqAalaovE9AJ2v0WvWaVQabC09oCQNlarN13GhKsHwYqPjzcWePrNl1zUW2Bb
      nJ0XUP1h0hGVvgmNUo6Lpsn5+Sn6wGRtfY2BZTO7sEBYNtHi0/isHlXdYnP9Hp1Om3qjRqXZ
      5aMHK+QyuWs4VBeXV7n6FcAyOD49w+MLoYgOgigTDPjwe0VUGWQBWobMr37xUyq5MyxFfj6E
      QtOg16BhSHTKZ6D4SQT8z0coaV48QgjFMXj8ZJ+F1QfXcawuLq8wVkFwO1PA6Q0/MM+2LERJ
      Qgn78aZfP6TjTYxzEHjX9R9MWxRvKIAYGN5fLctGkkSEaOAarXIZZ27FAb743d/wo5/+nPPj
      LSxPmmhQIRx+tSU5gN5p4KhhvDJYJ0WcK7ZFsQD5T++/tDbY5e5yKw7gEXXOS01a3RbiIES5
      b9JrVcie11hcSXNwUMA0+qiqxkwiiDoVxm2N6zIKbqUtmi+Sona2jTecAhz6fZ1KpUqvVqTa
      NZhdWiccCZGOBdD7fayxiVJcxo1buQLE4il6qpdEKkWraeDYGv2OiCMoxIJhPLKClEyiKTK2
      aeJx2wK5jIixygKZ+gDpCvfulmkhyRIoMsIP3M44Z0Huuv6DyQKZ7UdYZnVovf2iOa4n9We4
      TUFdYIQOkNvdI7K2yus6+9uWTqdrEwy+XI056DYZ2CL5cg1b77G2tvrS60blr3E6w/cF+gOe
      5L8HgusALiN0AHNg4ADl3AmnF3UUbwDR0klqHsywj27V4IvfHbG8eZ92rUpEE+nrJt7UFIZp
      YhsGR88ec5Irsrj5ExYn3eWLLtfPyLNAzXaHlbV1HFPHcRy63e7zAdqCwr21ZWqVCl7JodSz
      iXyv4K3eaLF0b42w74eVLru4vCsjuwLEZ1IcP3nC3NIKF5ljlpZX0BsXNLoW8WAMS3UoF7NM
      z8wS94mUOzYBFXyKSlD14FgWmmeOw5MsE+lpAATZB/LrH5i9Cw4OAu4DMJdvGasskNsWxdUP
      w81mgRwHXddBlFA9yisv27aNIIhDVSI0/6+/wDobfkGMGAgQ+2f/dGi9y4fH9TuApfM3X3xB
      VPMwvfkThG4Zjz+CJjmUai36rSqeQJhEIoXermNJXnyyQ7XVQzVqHDdlHqzMUK1USKSSGL0+
      hiMSCmjoW9sMHj0a2jQplQTXAVy+w0hiANMYYPs09HqBRtekn93FIzuk0jPoeh9Z83FytMvR
      4SkWMtMTIbRwipRqgeTneOcx2VKVSHWa3kWTT37+o1GY6eIyGgdIpqcR9B6CY2GZz9OhgiBg
      mhay6iOZSHDWbRGfmGZ2agKPAkf7+0TnZrAMHVHysLx2n2hYpaSECfzABewuLu/K9TuA5GFt
      ZQmPLKIbNn5/G9k7jyo71Jsd4nPzKIrM/MI9JvtdDEdCUwQW1x4Qi4RQvFUCoSr1KQsAAAll
      SURBVFka9RqaFmZu/tuF8crCPOIVOrqJ31tk7+LiZoHekXHOgtx1/Y1lgfq9LrKqYfS7eDQ/
      0hsyPb1eD01796ZUf+D8//gr9JPhmuM6QPiTFVJ/9uOh9C4fJtfqABfZMyJzy5TOjphcWCd3
      csjEzCKdWp6WLrA8P8nR4SHNgcO96QTFep+ZyTj1SgWvP8h5ocS9lUUyRwfEJudx9AalSovl
      1XsoooBRbdHPV4a2z1yavMajdfkQuN4YwB7wbOsp7XoFy3Co6gaNgyM8oonmVckeHZGYW8bO
      HvHk8Rai4GDaOqIUxKpegCCQP9knkF4ie7KPJDosTgQ4qxosJdxA2OX6udZaIEFSWb//gMWZ
      NIFQEEGQmEyn8Pn9KIqCV1U42tul27cIBv0E4hOEfBoTiSi+YJBetcBA0sjs7+BIKl6fD1VR
      ENwZSS4jYqyC4PLnTzHKzaH12lyKyMcrQ2nHOQi86/oPZkFM9KcbV84Cubh8l9GtB9C77B8c
      MzE7h+QIhMOv9uJxbIN6o0c0+rzC0zYNbEEG20SQ5FfGKJ3+j39xpea4sV8+YOof/unQepcP
      j5E5wO7uHssbD5Do87vffEVseobZZIDjTJ655XtU8xm0cIR6tUezck7blPEZF5x0gwTMKk4g
      zdpslEy2wOLaJgF1rC5WLmPCyBbE2Eioiowsy0xML+AVTdqdLlhdjk8LtAYOqWgAjBYt20fS
      72ArQZburTGZnmR1dZHDg31sx6JSaYzKTJc7zsgcYCoV4ZtvHlGqddB8XrxeDV3XkWQPmuoh
      EY8hCBJaMIbYr5Kr9JiYTFM82cPr93N8eEIymQRBJhx63cpiF5erM1ZZoMZuBrvVG1qvJEIE
      FoZ7GDbOWZC7rv9gskCdeBg9NNySSJ8qEwy5DRZdXmYkDnB+nmNqavqPfw86LbqORCTw+nFI
      l2F3q1TsEMmAzP/wr77iq/3haoF+sjbJf/WPfzmU1uXDZSQOUKtVmZqapnSeIZu/YGZ2nk6/
      R7OpYndr1DsmsUiQsCaT7QiEZAuj26TeMVhamuXoKEMwlsRrd6iW8gSX/xbJwFhdrFzGhBG2
      RXFoNBrYvQqFRp/tp9uEQ36OTvMIjong2Oye15H1Cr0BdE3YmA3xdOeYhc1PMDo1ugORB2tL
      ozPR5c4zEgeQHJOt3SMURcHjjxINBfjFn/yKRrXO4uwEskdjYjKFX/MR1vzEJxKEfQq7+R4/
      /niNs2eP8Ecm8Kvw7LRE0Ot2cXMZDWOVBTovN9CN4VaE+VSFeMjrLoi5g/oPJgtkSx7sIdqp
      RLwyMZ/s1gK5vMJIHKBdOqfriZIK/7BVX1a3Tt32EQ+8vvZ/u9gl3zZ/sD33J3zEfO5cMJdX
      GYkDWIbOQLKxTZ2trS1MyY/X6tA3LZKTU+TPi0zPzdEs5mgYIjGvTc/xEJW6bJcF7s9GKZRK
      xCYnKRxkWHzwgMm4u6Dd5foZiQOIsoIsCui9Do7oYaB3iScSLCXC5DJnzN7bJOU1uChIWHqf
      1NIC2VyRYDTJWiJBN7+LLxAi6PMiza/88eSfCSuEhwiIEz4J27afzwcY8jboKlpX//7qxyoI
      vmpXCNu2h9ZfZd+u/nb1l333tzIkb1hE8WrmXkV/m/t29aPTj9UVwMXlupF+/etf//q2jXhn
      HIeD3S3OClVSycQ7dZg29Tpf/H4LU5DQmyX2Dk4IxlJ45Lf9ojjkzw7IVwaENHjyZJueJaI3
      S+wfnRKMxPHIl12SHfKZfQpVg6Cs89XWLqYt0WsUOTjOEIwkLrfBsTjYfUYme47fr7G9vcPA
      kenVnutD0cv1Rq/F9s4ulUYXo1XmKJNH9QU4PdihUGmSSMQv/fz0boOdnT2qzS5Ov8ne4Qn+
      cJTj3S2K1TbJeOxSfTl/xsHRMaaokj3Y5qLWJqDJPN3awUAmHHxLibvjsPP1b5EiM2QPnpK7
      qBP2yzzZ2sFEIRx8S12Z47D99W+RI7Mcbv2ecr2LXxV5svUMU/AQflGXNla3QPagjeWJMBsR
      KXXeLR06aNYxRAlJkqi2+nz60RLZ03crqIsmExidPqVCnsX1h/TbVWrtPg9XFzgvlt6uTyUY
      tPt0Ox1s20GSJOodnYf3ZslflN+iFllaXUOTbTLZPKubH9Ftlql3dR6sTHN+cfmwQFn1s766
      wmDQo9VqgwBCv4YYmiLqtWnplz9QVH1BoqEAhmFQaXX5aHOF7METxMgsIY9Fe3C5PhJPoKkq
      A71Nq60jiBKFQoG1+x/Rabzt2KF2kcOybTqtBraWIB2EJwfnbDz8mHbj7Z99tZjFsh16xoB2
      20AQJXL5Ig8+/ph2/Vv9WDkAgoBlWRimhfiOAwbU6Ay/+MlHlPM5HNvGMg14p/tJAe+LpryC
      IGBaFrbt/DGbIAhv28a3+mBiis9+9Amlwtl39G+z32F/Z4vU/DohVXx5/+9w/Oagw87+CffX
      11laf8DG8iyZXA7LNLEsC/Etu7dth2gi8TyTZ9tYlokoSX/Uv9V8QSKZjNFq9fjxz35GSOpQ
      7VhYL47jbceeO8/TatYpXpSwLQvTtJFFXnwOb5Fjkzsv0GrUKBZr/OTnP8NHi0bX+uPn+AfG
      6kmw6PETlPNUDS/r/nfLCAx6LQ5PzoinpwjJBlt7RdY3N98utC0O9o9pd3VmFlbJHu8STc+i
      0WP3pMDq+sZb9Cb7+8e0uwOqVY1CsUhiYga/pLObKbG2vn6p3LEMegOTXOaYpcV5jg6ekZie
      x2O22ctWWVtfu1Tf77YxTYPjTJawx6ZYbbKw9gnV7CF9KUhAvdyB9U6To5Ms0USKpF/i2WGW
      e+sfUTjZw5CD+D2X66sXeYrVJhOTMxwfPGOAj483pnj27Bmp6YVLtSDw4NPP6NULDLQJGrk9
      mraPj9YSbD/bJjWz+Ba9yMMffUa3VsBQ4xztP8MUA3y8kWZnZ5v03LcFlm4Q7HKnGa9bIBeX
      a8Z1AJc7jesALnca1wFcPhhsa8DvP/8Nj3YO3vZOSqXnbfbHKgvk4nIZx48/x47e48G9CR59
      8dcUa1021xdoGiGaF0fYgy6ObeFPTvGv//wv+ef/2X/uXgFcPhyMwQCP6kHCYC9T5dM5P7/9
      aotipU0mk6FwUWZ1KcVF02JpaYXJeMhNg7p8OJj9Nn/1m8+JpOcQOhcU6z0++eQ+X3y1jSBK
      JEIqGyvTHFdlaplHrP/oT1wHcLnbuLdALnea/x8ysQXaEJ3ggAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='104' name='Sheet 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
      Np2oIRfoAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 5' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAATpElEQVR4nO3dWWxb2X3H8e9dSIqSqI3aN9OWLFtex0s8cWZf0iTFBMFkkiZB0ABtgQJp
      X/rSh6BB06IvBfpYFC2KIAVSNG3Smck0SJNMZzBBmukksyTjVbIsS7L2hdookRTJu5w+UNaM
      Fkse+0qUdP8fQLDuJXnP0dH5mVfk/fNoSimFED6lF7oDQhSSeeebdDpNLpfb9gYtyyIQCGx7
      O0LcC22nT4Hm5+epqKjYySaFuCs5BRK+JgEQviYBEL4mARC+JgEQviYBEL4mARC+JgEQviYB
      EL5mbn2Xe6AU/b1dzC1k6Dh+nMGeLtxQhFhNGK20jomREQ63H/SkKSG85EkAFIrFjMuJ9lou
      37hJdU0MZ3GSZGqBmzdGOX3mIVzXRSmF67rYtu1Fs0I8ME8CoKHRUh/lRm8fRZF6HCuH7TgY
      RpCaaAWLyTQVxRVomoau6xiG4UWzQjwwb06BNMhmMxil9XR2HGLwVg9apJJIJERZXZTZqTHQ
      KtHu3F3TNj2cEDtFrgYVviavAglfkwAIX5MACF+TAAhfkwAIX5MACF+TAAhfkwAIX5MACF/z
      5lIIIXaJ1K9+TbanZ2W76MRxis+fv+v9JQBiX8l2dZF87fWVbS0Q2DQAcgokfE0CIHzNu4qw
      m9dJpDK0tHUyMdCDE8xXhOmROiZGhjncfsiTpoTwkmd/A2QyOQKaYm5ukpLqGPbiJKl0gp4b
      ozx0VirCxM5wXXfVtlJq0/nmUQAUWVejrbWOgdEk4UgOZ7kirK6mkoVFqQgTO0PXVp/Va5p2
      l/mmUOk5rwKgUR8tZ3BsgUOHO4gP92FEqoiUhSirq2IuLhVhYodsMLU+PN+UncEZfhfr+g9x
      54e8KonUaGg9RMPyZqSjc9XN4cYmT5oR4n4opVDzg1g3/hu79zX0aDuBY5/DaLkg7wOIfUxz
      UTPvsPTKL1FLswSOfIbwC99GL6leuYsEQOw7mmkTrJklWJXAjJQRevhP0OuOoxnrl+aS9wHE
      vqBcB2eqG5NfUtrZj6a7pHoPYAefxGh8aMPJD/IMIPY4lUtjD/4f1uX/AOViz4dJXm8H997+
      b5cAiD1HKYVKz2B1/wi767/Q604Quvin6A2nyPzLd8F9feuDLJMAiD1DuQ7uVBfW1RexR39D
      4OhzhD//z+ildfd9TAmA2PWUncXuewPr2kvgWAROf5nQE3+OFix94GNLAMSutHKac+0l7Fuv
      o0fbCT3yZ+i1nWi6d1cSSADErqJcB3fyOrkr38ed7sVsf5bw8/+EXhzdlvYkAGJXUNYSdt/P
      yV36HlqwhMDx5zGf/iZaILyt7UoARMEopVCJkfwlCjd+jNF8gaKnvoFee2zHrheTAIgdp5SL
      M/obrGs/xJ3uyb+a88K30SP1O94XzwpiLMvCVQozEADXQWkGhgZoOq7ryCXQAmWlsW++hnX9
      JTCCBE5/BfOZv0QLFBWsT549A0yMDTM5MkTZgU4S48M4ukl7fQlucR0TE3FOHWv3qimxhyil
      UAujWNd/iN33c4z6k4Se/AZ6zdFdcVm8Z5dDt8QOsZjK0BRxCRpHcBNjZGyL99+7xCeffmyl
      IsxxHKkI8wOlcCYu4179Pu5sP3r7pwh+7h/RiqMowHGcbWl2XUXYFhWInj0DpOYmKSqvJVQU
      IjE8hm1lOBAp5tzpY/T2D3GiI4YOGIaBacqfHvuRUgqsNHbfG+Qu/ztaoJjAqS9htj3t6Wv3
      m9H1NRVhur7pfPNsJgbCZbSWhzF1iDVFUcESSoM6mEWUlxZ71YzYhZRSqMXx/GlO72sYjWco
      euqbGHXHCt21LXkWgGDRB5O8vKpmdSMlJV41I3YR5dq4E1fJXfoe7kwfgc7n1hWc7HZyLiI+
      MpVZwLr5Knb3jyAQJnjm9zEOXETT99502ns9FgXjJkbIXfoeztDbGE1nCD37V+hVB9G0vVtX
      JQEQm1JODmf8Mrnffhe1OEWg8zlCX/wOhMp2xcuYD0oCIDakMgms3texrr2IVhwleOr3MFov
      3rW0cK+SAIgV+Wtzhsld+QFO/y8wYo9Q9Mm/QY8e2tOnOZuRAIj8ac7Ie1hXfoC7MErgxAuE
      vvxvaEVlhe7atpMA+JjKLGD1/BTr+svopXUETn4Ro+VhNDNY6K7tGAmAzyilcOduY117Gaf/
      5xgHHyf86b9Fqzywb09zNiMB8AnlWDjDb2Ndexk3MUrgxPPLpznlhe5aQUkA9rDJb/019vT0
      ynbp009R/sLnV91HZRawbvwYq+tH6GWNBE5+AaPpHJoZ2unu7koSgD3MmZvDmZlZ2XZTKSB/
      BaQ7ewvr2svYt98k0P4s4d/9O/SKlkJ1ddeSAOwjyrGw+t7AuvoSammO4MkvEPr4131/mrMZ
      zwKQyyTp6x/mUMcR5sYHUUUVVJWYaKFSkok5qqqqvGrKl5Ry73wDygUUaC5oLprhEKyeR5/+
      DnbXOYLn/wCj4fS+e9NqO3hWEtl9vYuq+mas9ByzSwb27BBmNEzSDeNqIfbD/FfKBddZ/rJB
      uSjXzn+/vI1r5/fZ2fz3dg6cLMrO5vc5OZRrgZ0DO4ty7twvfxtODmUtfeixObAz+bZQHwRA
      uRQ3DKFqLNDAmo9A09cIf/aPCz1Me4pnSyQtZW0CLNHXP0l5zSEcJ03OtujuneCJJx7xtCJM
      uQ4sTyLl5PKTz8qg3Fx+YjnL++/8e2cSLt/vg/3ZVfdd+XLt/KRzrNXbygHNyBd36AZoOmgm
      GCaaZoCug2aAbub/yNRNMENoRhDM0PL3d/YH0QJF+TebdDN/HyMIRij/7/J90Jcfu9Lecvua
      TuIvvoUdnwalgdIwjod8X21XmIowTaOmspTxqTmq6w4wNXIDJ1BMe0UJn/jEBW7dvMmpE50P
      XBGm7CzpF/8QlYqj6YH8xDCCoBtoZhiMQP5NnOXJpBmh/GnAnUmom/nPmQlGPthnhNY8JgiG
      CWZ4Zb+mmxAIg/7hUwptzXI8H2zs2EViylz1Kcj6FtVPflCgijCNts5TK1stjasLYipOdK59
      wP21YoYo/tK/+vING7E99txMkskvvCSzSfiaBED4mgRA+JoEQPiaBED4mgRA+JoEQPiaBED4
      mgRA+JoEQPjaXa8FSsVvM62iRI0FZqwwB+r3wfXMQqxx1wBcfvctLk24NEQrePzpZ3eyT0Ls
      mA0DYGdTuMXVRIxR5mfjLKZzRCObr+N0+1Y3C2mLWHsHo303cEPltFYXoZXUEh8b4eDBA9vy
      AwjxIDZ+BnBtQkGTRz71eVqrS9C3XOBOkUgk0ENlqOwcofIW7OQUyWSGwb4J2o4czX/s3vLX
      di2P4zdq7baMbX6VmjXbm43JhgEwQiWkZye4Mfq/9FUUcepjj1BXsckqLwpOnX0Ye3GcS/3T
      VFU1oFBomk7ANLCs1RU5++FThXcrGdvVNDYfkw0DoOkmj3/6eX72k5+RWFyiKLh13cxgXw9z
      C0t0HjvBaF83KlROaWkRR+trmR4bgmgEXdPQNG1d1Y64P2t/rTK2G0z2LcbkrjM7Mz+BWdlI
      zMgwMZ2gvLXmbncFTSPWfpTY8uaR46dW3VxyQM7/xe501wAYwWIChsHBzjNUVUR2sk9C7Ji7
      BkBpBl3vvcnoYC+PPfscrTWFC4E9O8vM3//Dqn0VX/0KoXZZfFs8mI0DoBTd165y+OyjfPLR
      8zvcpQ26k8uR7e5etc9NpgrUG7GfbPjXgZWaJaGV0WLOMyrzTOxjGz8D6CaD19+hJ2ejrg3z
      qc++QKxu/68WIvxnwwAEisv52h99faf7IsSO8/eLxsL3JADC1yQAwtckAMLXJADC1yQAwtc8
      DcB0PI7rKmanxplJJLGyaSwHFhcXvWxGCM94FoClhWne/u0V0ql5RuMphvpvMR8fYXJygtHp
      Ba+aEcJTniyQoZTiytXrRIoDzMzEiVTW4SZssrbFpZs9PPPUYw+0RNJGFT1eLLW016k1NWHu
      FssB+UFhlkgCOo+fovdWL6Xl1fTd6MI2i+iIlPLxC+fo7u7hzKn7XyJJbVCS+SBLLe0X2pqS
      GFkiqUBLJGmaRllFJefOXwAgevHiqturK7xZIkkIr8mrQMLXJADC1yQAwtckAMLXJADC1yQA
      wtckAMLXJADC1yQAwtckAMLXJADC1yQAwtckAMLXPLp2VjE62M/0XJKDHUeZHOpFhcppqixC
      K6lmdnKU5uZmb5oSwkOeXTxe29CM5vYzNjaCWVSLk4qTNNNMjsSpbmhdWbpGKbWuaGEra5e9
      ud/j7Dfrl0haXxDiNxvNlc3GxKMAaDhWhpTlgJNDD5kYmo7rOiQWUzS0GKvWCNuok5u5WwA+
      6nH2PxmTtf8rbDVPvAmAUoyPjZFO56hraWNmtB8VLKOuNMyZs0eYGBmkuvwQOvmKHWPLRfdW
      czdY4uZ+jrPfbLREku/HRF89KluNiTcB0DQOHv6g6qs+embVze1thzxpRgivyatAwtckAMLX
      JADC1yQAwtckAMLXJADC1yQAwtckAMLXJADC1yQAwtckAMLXJADC1yQAwtc8qwgbHx5gamaB
      WEcnU4PLFWFV+YqwmYlRWlqkIkzsPp5VhNU0tFAcHGF0ZIhgcS1OMs7iYprJ4Slqmw5IRdg2
      WF8RJmNSoIowmJkYYcEKcLChmPF5A13TUa7DYnKJBkNf6YhUhG0v349JYSrCYGJyCi0QJl11
      iMxcL26ojJLSMA8tV4TVlB/CMAypCPOQVIStV7CKsNPnHl7ZjJ6SijCxN8irQMLXJADC1yQA
      wtckAMLXJADC1yQAwtckAMLXJADC1yQAwtckAMLXJADC1yQAwtckAMLXPKsHmBwZYGBygQun
      j3Lp/cu4gRLa6ovRIg2MDA1zovOwV00J4Rnv1ghrihGfv0o2PUtV4xGchXHSmTRXrr/H449d
      XCmGcRwH27Y/0rEdx9lw30c9zn6j1lR/uK7r+zFZW/2lthgTzwKgaflCBMMMsZRewM7liESK
      ONLWytjENIdb6/K3Gwam+dGaVRsUNNzPcfYbbU1JjK7rvh8TfU3xlLbFmHhWFD8ycAvLcpjP
      mJQHLVRZM2WlBuWhMhbnZ1Csr2ASotA8WyWy+eBhVj73oaps1a2h6mpvmhHCY/IqkPA1CYDw
      NQmA8DUJgPA1CYDwNQmA8DUJgPA1CYDwNQmA8DXPA6BU/rKIofE4meQ8GVsRj8e9bkYIT3h+
      5ZSVniXpFGHHxylyiljMzWOEI9R43ZAQHvD8GcBxcoTCpRQFgli2Re/ACFUVZVs/UIgC8DwA
      oZIoiYleEpZLSbiUixcvMDTQv241EyF2A89PgXQjyEPnPrZqX/mxI143I4QnNLW8fkw6nSaX
      y217g6lUipKSkpVtpdRKMc2HfXi/ymbJXLsOKJTKF9+EDrejl5Xd8zG22u/FMXa6zcy1a6hs
      DqVcNE3HrKsl0Ny86XF2Q7+3sy/W0BB2fPqDMamvI9DUdNf7rwRgp8zPz1NRUXHXDm22/84i
      cGuXvLnzIzzIL6pQv7wH7Tfky0M3WgboQX/OzfrnRb+3c6zudUwKXj+3Uec327+25O1+jrHR
      fi+OUag2NxoTL9osxJh41Zd7HZOCB+CjuNsP63cyLuvd65js2gC4jkVPdxeJpEVHewP9gxOU
      RRsoN7MMTC3y8bOnSMRHuHQrzhMXz2x9wH1iqK+HmcQCtY0xJkYG0YIlHDlQw68u9fDsE49w
      9f13UYFi2g8fpTjkjxUj56ZGGRqPEyqNQnqaZNbhSOcxbl9/h5MXnuR2bxcLWeg4cpSiwOpn
      hl17KYSmm7S3txEKBZmJL3Ly7FncpQVqm2KUBDVcO8vodJrK0kChu7qjmmNtRIpDZJILNMaO
      UBXQ0Mqi1EXzLwgYho6Ty+H4aL3gippGGqrLCQQcMCvpbGtmbiHD4QONQI7BwQkcK0smt/7j
      UXZtAJST48bNAY6fPEGR6ZJKLZGz3ZWntqVkgqWlFIODQ6SyfvksHEXfzRtUNx+mIVpKMpUi
      lcsRWHm6d2mOHSHWWM7U9GJBe7qT4qO3WdIjtLU2k8ulSCWTmMHQ8seQGJRWVnL4QD1zc4l1
      j929AVAOuA493TepO9hGfPg2sbY2hgd6sSyLlApz7uwZHn3kIiWhXXsm5zGFhsZQ/y1ygTLC
      bpLKxhZS8XEsy6J/aIKlxRkmFyHWWLH14fYJhUYiPsbIxDytTVUk7BDRYpfe8RQDw1N0HGpm
      OJ6mpXH9p5MU/GVQIQpp1z4DCLETJADC1yQAwtckAGJXUfYSv3rnfZLTI3T1jd3z4/qu/ZbL
      N2+Dm+MXr/8Pb779GwauvZO/MTfPW+92rbp/bn6EF1/5ye59I0z4k2aGycYH+OnoMM88eZFX
      X32NcHk1zRUm3b23OXY0xntX+zl5/iL1gSRvXb5FtKGRd3/2Ko8+/xVIx7kxluarX3yCnl+8
      yMDwBLGz57FSi/zklVfQTJ3zT36G0vQcZmVMngHE7nPxiXNkMmGSty8zNJtFuQ63hwbJzcUZ
      GBlFrzzA0dZa3n/rPc498yyDPV00xmIc7YihShp54XfO8dJ//idZBzpayhmbmmVifIrFJZez
      h6q43j+10pY8A4hdxwyVcbS9habOBhpG36SsrIyMPY9e10RNXT3RUH6tiQtPfoI333idjpPn
      sROTGICzNMflrls0tsaoqzIorqikVpVixhq4/O6veX+whEefacBIuWRnrsj7AMIvbK5c7uHU
      6eOr9koAhK/9P8U0eOteJJtrAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 6' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOy9Z5Bk2XXf+bvPpc/yvr2ddmMx3mDgCIAYYAQCMiS0XEpcKahYLRnkxsZG
      aBm7ilhF7MbGftCagKTVUgxSQYkQSBAEtfBmgBlgbI/pce2rTXV32axKny+fufsh6756+fJl
      VlZ3zwxmek5EdVdlPnPffefce87/OFEqlaRpmtxs8jwP3/ep1WpomkY6nQbAtm1830cIgaZp
      uK5LoVAgl8thGAZCCKSUSCk3vUfcsf2cF3eMECL4TkoZ/N3tuH7vdaPUbRxbIcMwSCQS1Gq1
      nmNOpVL4vo+maTSbTXzfv6Fn1DQNTdPwfR/f99u+E0KQSCSwLAtd16/7HjdKhmmaJJPJm35h
      xUiNRgMpJYZh0Gw2MU2TarUKQDKZRNM0TNOkXC4zPDwcTFgcqc+FEAFjKCFQFGYYXdfxPK9j
      XHG0FcaO3vNmUVTwws+ovlfH9CsYmqYhhEDX9Z6CrWkaiUQC3/dpNBptc30jz6PmP+46tm3T
      bDYxDAPDMMhms++KMLiui2EYAGjv1E3US8rlcgghcF0Xx3Go1WrBMbZto+s62WyWRqPB2tra
      llcdKWXwksOMsRVGCTPaZsffjBW533FshdHjSNM0dF3HsiyazWbPefV9n3q9jm3bOI5z3ffc
      KkkpqVarNBoNarVax4L1TpBhGBuLSb1el+/EDqDI930qlQqJRALP83BdN3gRQohg9Ve7RbFY
      ZGBgIFCZYGPli1vp41ZNteWqbbbZbHZcK0yK0TRNC1atKPOp8zRN63qdGyG1q6jrx1H4nv0I
      h2maAfO7rovneT2v/15QeDWG1pjz+TzvhFoOrTn0fT/gxXd8NhQTCiEC6VbbsZSSer0erPqJ
      RILx8XFc12VhYaGnWhJmhrCAxB1nWVZPZgkLk/o77ifMPDe6OkepH4EKj0G9yF47plpUHMd5
      V+yVrZLruh0qj+M4wYL4TpDa6RzHwfd9jM1PuTFSAqBWN7Xl2bZNNpsNPg/r/UoXvHr1KqOj
      o20rRPTa0C4cUcFwXZdkMtnGKOo8z/M6GE8xWJTBo8zeD8OGBabfHUPNw81YqV3XveFrvFOk
      mD9uEWk2m9TrdZLJ5E1faNS8ep5HOp1+5wVAkTLEwttwrVYjk8mg63obQiGlDFQgZSSpz9W1
      otQNvfF9H9d1MU2TRqOBECLQccPGbByDd7tX3LOFr3ezVq9uxnZ0TP0yyC/LLuB5XlfmV1Qq
      lbBtm2QyiWVZgZ13M0jTtAB9etcEADa2cMuysG0bz/Oo1WokEgkSiQSu67atWtVqlfHx8TbB
      UP93m4w4Fci27QCSCxt4cfp0nEoRt9NEkag46oZmRSl877h7xT3b9TCD7/vvKeSoxhBeKHqt
      8LZtB0BJMpkkmUwGgnMjwpBKpYLz33WLSOmuiUQCIDA4TdNsQwDU5IQ/i0NG1PU2o3q9Hlwj
      bkz9ro5RQzQMM5qmGdg710NxRnc39e566L02gK93/J7nUa1WWV1dDWD166Uo/7zrM6KYRTFt
      GCuO6szpdDrwGcQZpWHqR2VxHKfrChg1KjeDIaO7krquEALLsnpPAvHM3u0e/ZASwHcSpr0e
      CgtyHAq1FaHwfZ9yuUy9Xg8crep99QJCetG7qgLBBjatYC61zSWTyWBrqlQqSCkpFouMj4+3
      nd/L8aX+7qWLqy04ug1DJ8NF7xX3exhWC5+nXnR4d9qMOXupdkAHWKCONwyDTCYTOLHeTRy/
      H1LMr9C/uO/Dz95rDqSUlMtlKpVKsJiGFyvDMLAsq+/F4F0XAGitVsqw1XWder2OpmltnzUa
      DRKJRNvK2q9RGP4serxy9YevGXecYuwo00fP6bVyx+0gvXT8sC+i2yoWt3OolbBerwd+lrg5
      UUz4bpIQIhbujKOtAA/hZ4+SpmkMDw93RQ/D578nAqB0foXOwMbOoPwBCwsLzMzMBE6sOMQm
      6gfoBl12Oy9uxQlPbDd7Ie73uOM2U6Oi1+l1v7ixqjlxXZdSqdSXkdxtEelFvYRWfa8g7agn
      WTm6Nls0wrTZTrgZbWYTqnE2Go33RgCgNWkK6gx7opUA7N+/n7W1teDYOOQgbtVWx4fvEzeZ
      0ViX8Avql2HjxhZ33zDKE52Dbt/HMUyv3SRuLq4XLu12j25kmia+72PbdhuKFwd39nO9G6V+
      Fp1Go9GC2N+xUWxCW9V1bxQBiSPFJFHG3coKFGc3hG2AXhR9UXEBaOHx9WLq6MIQtysq8GEr
      gtDPnAshArAifF43RowKgVL7+r3fZqQg717jVWN4z3AxKSWO4wTWfNwL66XDha+zFXUj7vww
      Xc91ojq/gkajzpto0F6/akEvo159r67TKzQivLCo8XVzMG3l+W3bbvu7G+ITvX6c8N4Mh1dY
      oLpROp1u2Z03dKcbIN/3WV1dDSx5TdPI5XLBlqkM4yiFDcW4rXWrFKe2xKlFvSh8fDc7Q/0e
      VWlu1srXj26v4vzDOnm/526FwrZdL7qeBavf+7uu2xOOVkjkeyYAihR8GH4pykiuVCptx3ab
      LMMwAgM6HG0K3b2nvZhPMWkUueiG3HQTxF6GeT/PtdVjNqM4RCtK6XQ6cEo2Go2+4onCQt8v
      87+TpLSLXlBooGW8mwOLDsCyrCD5IhppqbbnuK1fMW8YA3ZdN3D1q79N02yLg+/XuNV1nUql
      Qjabjf3+RqmbUajGH0W31HFR4Ypes9vzhY8NqwcqCUZFRgJYlhWsnMlkklKp1BZO3uv60dDm
      95LCqnE30jTtvbMBFApkmmYsg5qm2eYvUKETYVL6rmJ+pXvquh7kH/RimrgxqeNSqVRwflzC
      TfiaUY/k9c5HVA/u9aMWiOix0c/DBnE4DkfNfyqVCtA4NefqfBWDsxmpFfe9DrWIo27vRC3A
      7+kOoFLhwoZwGLHI5/PYtk0qlQpiQMIvMM7oUw6hOApfP07vjRqs0ArIi/Msxk1qP6tOL4pT
      3a5HPerHdhFCYNt2oD7mcrm28BQlUJZlYRhGT1XoZjvYboZNout6m1MwTh3Sdf292wGg9aCp
      VApN04Lo0DDpuk4qlQqSuhXDx12nX+pnFwiv9Aot6IbxX889bnSMYeq2Y0SPiRr3iUQimHvl
      GKrX61QqlTaVSC1U3Sgc138z7JTwTrZVCvOHEIJarUa5XKZUKlGv1zvm9T1FgWDD2E2lUsEA
      4+wBXdfboDYl1VFYL0pbWUXD140zZFW8Uvia3SDH690F1DW7fdfLDxAdczeMXdkZSmXxPC/Y
      BZrNJo7jdNgo3ZjxndD54wCJ8FiizxdHvu9TrVbJ5/NIKbvaMEKI9x4FUrtAOFkmOuFqFcrl
      clSr1Z7QYRzS068aEdaZo9dRidRxKtRm+Hy/1O1lK+p3VeylnilSUKGmaW3x8aqUTS6XC8Zh
      WVbsCqq+v5kQatz4o6pvNwqPpdls0mg0yGazASoVt3j8UlgtKkkG4hNSoIVOJBKJQCXph/px
      MHXbuqPnqowylVXWbWWMCkm/Y4yiPdGxbVUt6nb96JiVYRxWP1V1iDBEfT3QZtQAj3uGrQAI
      m+3o0TmrVqttsWRx9EshAEBQH6hb+Q6lCiUSidiXEdaFFcWt0OGXEmWwaGx5mHzfD+yRRqPR
      Nu64yd2qXRIeT3T32ap+HZ2LMDoUHbOa16iRW6lU2jL0rtfIDc9lLwbv9l343K3s5OpYVXSh
      23V/aQQAWpOcTqd7SrgKm+7GdNGXC51QZS+KrlrRzwzDIJlMUq/Xg+tvFnvSD222tV+vTRGG
      RZXOD52LQ5TBPc8L1IjNvKphii4kmx232bXizul2Xtz9Go0Gq6urbQIupdzwP/UcwbtMcat4
      3DEq9bDb970QkfBxcedFqZs+bRhG4KmOqkTXg+Js9bx+rx0dW9wzuq4bqJfhEjLVajUoWgX0
      JQRxq33cu9jMfut2TD/3jpLrukHRNXUf5Sf6pRKAfihsqEL3iQw7g+JUo63AmuHz1P+appHJ
      ZNoqTPSrs4d3lK0iVVul8Ji63aPRaAQ7QyqVimX0er3eddGJ3i/u/pvN8Y2qkZsd77puYMhL
      2SrN4zjOe48CbZUUKhEu4Ko+Dx+jKC4ysNvfW4E0wyrRVuDAbqrBOyUA0XuEU0LDY1KrvPIE
      h8m27WBnUJXmet0jjMb02oE3W+FvBGGKe6f1ej1Q9UqlUssRe11Xf48pqjKEYbI4YzK6a0R1
      yK1Octwqr4Kvogb3VnaWd4PU6t5rN1CVLcLjl7IVe9WvMbzZc0fnsJvAbJYi2oui5zSbTYrF
      Yltt0PelAChDKJVKBXUvwxMYB/tFBSRK3fTPzWwIpQ6p+jWb3acbvVtCEE6KiTJWNFAunDyj
      dt1+ax0pikPcFPU7P1uBgjdDnFTYjaL3nQD4vk+xWAzi2lX5vGq1GpQ6hPZJi+4EUeqG4Gz2
      wsL3UFGVCqLt9gL6fZlbFaB+SQjRVWVTKItpmhiGQalUavtOnX899+wXjOhGW2H+rdD70ghW
      W3Sz2QxK6PXS67cKf8b99BqPItUDoR/d9t3Q+RWFYd1wCZcwQBAej6qfFDaG1bmbhUYrUt59
      IVqe/l82UnPyvhUAtfJLKYNyIN1SKxV1Y8zNBKRfYdI0LSjEq46/GbrrjVIYCo0CBHFCoDDz
      8M7oeV5Qr6kfCtd66ldtMk2zq8f5ZiwYcXbh+04Fgo0oUSFEx0tRzK9qCoUbcqjve1HY+Aur
      TFFVqhf5vt8ROxSld1MFikK+0ey76HGO41AsFoH2aspbaV6iAtL6pWQySTqdDrzP74RNFKfG
      vS8FAFrqhooLqtVqHdXQFESpiu5KKTvCraPUC5cPM2SvmkHdjPFe9kT4ZW/VyOyHogIQ/Xyr
      AMA7QSpeP9wnLko3AovGkRC/BNGg10tCiLaMJWUEq5dm23awpcblF/dL3Sa814uIrpSboU6b
      +SG6ndcvRVf7uF2tmw212f3UQqRq+t8I9VIxt8L4cV18uj3n+84GiJLSu+OiRNUWbJommUyG
      VCp13dUKejFCVNe3LOumNqe4XltCUfR5oo3rosIaZy/E3d/3fQqFQrDD9uMp7ka2bcfu5N3u
      3QtI6Heu3rc2QJjUy1LMXa/XA6+mlJJKpRIk3ahWoeGAMLUKdlux4xxC0WPU51EDSyWfRFWm
      bqtRr50iikjdCJIUPjfqL9kK1Wo1UqkUlUqFfD7fFiW7VeoXXYJOb3OU4haMbn+/7wUANtSh
      8MqlSvVJuZERlEqlWFyYZ3F+nuXFJaT0GR4dZWxiAonY1EaATobptdpEnUnh8UbPVc8Q3jl6
      +Qx6MX8vh5ViHmXk9qPqqHmN7mq+7zMxMcHq6iqWZd2UqtQqMT8O2u42tuvZHdU8fCAEQJFi
      /mw2i+M4bbmtjuPw6ksv8vzPn6EccvBAK+/3nvsf4M577wM6mSGOmRzHwbIspJRtDrAwRWE3
      9XtcfFLUaO73eeMYuNlsBhj+ZrZIOJaqmxDE9fpVO57ruhSLRRzHIZ/PtzHkVnco1bbIsiyS
      yWSgWkkpqdVqHXFMW2X+8PwH13qn26S+VyRlq458uVzGsix+/tRPePHZX5BLpLhv92Fmhsap
      OzYnLp/l9MIlfCk5esedfPwznwHiI0fDE67qDvUSAGhXLeJ06yhtBQWKQraKoh7pOLUpagj3
      GpPKH47mF4eZr9lsUigUkFIGxXIBxsbGNhUEIUTQC8w0zdistXK5HKhYUUHczFEZp+45jvP+
      DYbrh4Ro1b0plUqcO32K488/Ry6Z5iv3/woT+eFgUg5O7OAnJ4/zzNkTvHniNWZ27OC2I0e7
      Tmq/q043PfVGfAPdjo+u8t2YtNv5mzFoP/aBaZptzUyEEJRKJWZnZ0mn04yNjQV+mXAPaGj5
      AEzTZGFhAcMwmJ6e7lg4EolEW3uk6M7a61mjdl74uA+sACiyLItXX3oRz/N4YM+RNuYHMHSd
      Rw/cyetXzlGsVzn+/HMcuO0Q2nqFts0gzG7UC2+Pu+6NIj1RpldbvConE1ftoV8SQnTU/tkM
      XpRSks/nyefzbX2fk8lkgM6p4luO49BoNNi+fTsA58+fZ3h4mKGhoYDBVcW6ZrO5KSDRbV7C
      z6PO+UALgBCCRq3Gwvw8Qgi2DY3HTlbCMBmayFK8UGV1pUBxbY3h0dGeq3145VFIT7TzjDLG
      u+HtUYQnTP3o5puRlDKI5U+n0x04fb/XDRvAUVRM3afbXAkhglU9zLDhMAxd15mamgrUrL17
      97KyssLs7CzT09NBd8h8Ph/4eur1elulirh5Co+nm8B+oAVA0zTs5nrHEglNNx6lkEAht4YU
      Et/3qFYrDI+OAt0ZMGrUqhcjpaQpbV6ae57LxQvkEgPcM3U/k5mp1o3C9+3hALtedEOdGyZl
      FIcLWCnEppdKFjfW8N/9wLhR+FbTNLLZbFvL07hrjo6OMjQ0xJUrV9A0jenp6aBUppSyLcwi
      DGdHn2mzOfxAC4DaOnVNw/E8Tlw7y57xaXTRntQx5yxw3ptjWIwgEFhmf7mv4clVvYjrssa/
      Pf5/c7l4MfjumYtP8ffv+IccHb2j7fzNxn4jK3+UqtVqEG4QjrUJM89mqsRmQhmn9oWP13Wd
      wcHBWENXylaNV+XBV7FcO3bsoFarMTs7y/DwMIODg4EqFY28vZ6F5H3vCd6MhoZHyA0MAPD6
      1XN8v/AcTX9j9ZtrLvDvCt/Er4HwBal0msGRYaA3ahP9THmifzz7/TbmB7DdBn/99tex/Uag
      n4dXxrhmfDdiD8SR8oeoej/Re2zlnv0Y19FjlAoT1yFehVlXq9XYhnrpdJo9e/bgeR7nz58P
      UK64nIbwO4veJ85g/kDvAACZTIajd9zJz370Q3xH8oOTL/CzXcfZnpig6tc5Z8/RbLpMzI8j
      EBw8dJhkMoVNgzO1N1lqzpPUUuxN38aY0VJjwjp+mHzhc7ZwKnYcq/UCi9V5tmV3Ar1jbzbD
      7jej6905epFhGAF0uNWx6LpONpsNCiHDRhkWz/NwHId6vY7jOEGR3qhqJoRgdHSU4eFhLl26
      hGmaHWhSmOLUszgQ4AMvAJqmcf/DD3Pu9CmuXL5MdjlLzalxYuQcnuFhNUwmFoexGhYjo2Pc
      +9DDNKjxo5W/YaW5GFznfO0U9w9+lP2pI8FnUahTAIboMqVCoGtbKy51Mxi5X114M1IC0O91
      w9+r2ChVS0l1lFSfKa+vgk6htXBlMplgfsN1ncbHx1lYWCCXy3XUh42u8GpHiHse13U/+AIg
      hGBgYJAnfu3LfPdb3+Ti7CyZYoZ0Md3iWAkCwdTMDJ9+4gukMxlervyijfkBPOnycvFZtif3
      YMlEh94spURIjaMTd3Bh7XzHOKZy04ynJ4O/pRBcKK6xXKsxnsmwIz+AFsK2b4R6Gac3Ylh3
      a/rd637RcvW6rrO2thbUJY1rhggEeRyKecMxXEIIcrkcZ86cQQjB1NRU7HijYwmTlPK9rw79
      btLg0CD3HNzOePMiq7ZgteZTs33yQ8Pccf/D7D90CF038PFZsK/GXsP266y5K4xpU23u9LDB
      9+iOj3G1PMer147jy3VvaGacv3fsN9HXp7viuvzRyy9y4tpVJKAJwZ1TM/z2PfeS6VL1Tl1f
      US8hidvq44zBrSS5K4aJXisMi8Y5pKJ/KzhV+SbUNaKrtOd5lMvlWEZWu8fMzAyrq6tIKYPM
      M7VLbPZct4wKBK0JK105y/bace6+u9X2yPGgVHU5frHOvn17EWK98Z4U3dUYQKdVxVoZkuFK
      EAC6NPj1o7/Fg9sf5Wr5Cjkrx4GRQ2SMDHLdfviLt17ntWsbQuZLyctX5xhKpfjNO+7a1MBU
      /3db5eK6xccJQFgnV9TL66vCP+J8AIHfw7GRCHTTavMdhMeuPlPJLypPWQlk1OEW9heocxTq
      Njo6ysrKCqurqxw4cKA1n6G8Z9u2O3Khw9e+JQTA8zxyq68yMLCBQCQMGM0b3D5jU7hyntG9
      rfAH3/PZldrPvD2HjAD3Q+YoQ8YoeBvRkbHQmy/YmdnD3oHWC2mtgq3vap7HK1evxI7zpSuX
      +btHb8e6jjLoYaZU1Zz7UXeSySSO43Q4lOLO7XY/IQT14gpv/fTbrMzNInWdse17OfzIpzEz
      +a7XCJ+vmF4JpWL4RCKBYRhBWRY1NhXsp6DVs2fPtjq/G0ZgUyQSCXK5XCBka2trnQK/6Qx9
      AMh3GmS8lVhYbHTAwhLNNv1yb/o2bsvejsbGSjRoDvPQ0CfA27iG6qYY91IVph123QO4vo/r
      xW/PjufhbCHvthv1C2lGo0nDP9Giur7vx5ZMFELg2nVe+Ks/4fKlcyxv38e1w/fyemaAp155
      Fs9zY1UyNc64sauyLalUKnCaKdgz3LqqXC4HzL5//37W1tYoFApks9mgtZMSLlV4OTr2W2IH
      QOmvMeH+mtDIj05ACJ+WruSe7CPsSx9m1V0mIZKMmVPofvt0Kcw67kWq0i3RGPqcZTGVz3O+
      sNJxzraBQdKGgdxC9WPo1Mn7NaJV8n70WnGkSr5EO/gAXD11grXyGmt3PYqbG4T1a8xJyXPz
      czy6Yy8ylK66mXPKMAx83yeZTMZW3lZh7qpShWLumZkZGo0GKysrjI+Pt1XnUJmDKu5IjeOW
      2AE0K4mXnY79zk+PYgy0UITwyil9SZ4hdhr7mdC2IdzOGP64/NVwUV4g6HwDGxP+d47eTtZq
      Tx/MJ5J8+cgxvPXyLsrOCP8oXTb6E/5e/d733GwSnh0mFfMUpcrKIrXp3W3Mv/7AnC2uUbAb
      HfcJC2r0d+UJju4WymFWqVTantHzPKrVKr7vk06nAwbXNC3oD6BsCdUXTdEtsQNomk514kH0
      2iK6vRp87htp7G0fxZW914FuW3V4deqVgaXQIhXHcnB4hP/+scf58fmzLFYqTOZyfHzPPqYz
      2bYX2w1r72bcblV1Csft3wilB4dbal2MIPlSUqjXGLY26o12S1pXP0r9Ce9QKidA7Q7B9UMZ
      d3HzpSJIwzVRU6lUEEt0SwiA53nURRp/75dJrp1CbyzjmXkagwextcx1X9M0TTQBAomLFuvB
      hBajqcJd0Hppk8kUv37oKNB6SercaEQpxOv04VWsG/S4GVQap6L1Oq/b5zO33Unm+M+xY7+F
      ZETNimZ2hZEex25QKqxQQDI4MsrQ8Ai6rtNoNLBtuy1Vspvgq11XIXRqF1DAQNguuyUEQDFE
      Qxo4Q7cHL15KCTE67WbUUmV8cuVTWKsnEV4TNz1ObfRubJGNZSJN02g0GkEgmPo+nLYZN+Z+
      1JPoyqfUhV7qTRiHjwpP+JoAzVKdlbMLNGs22fEBhveMI4yNObPSWe4/eg/fv3wBL8KMg8kU
      4+nORSZu5S8sznNl9jyet96WyTDYsfcAO/fuiwUbovaO+j6ZTGLbNplMJiie7LpuIGQKZbpl
      YNAwMynmiL70OEbphqYIIRguvkpi8ThiHSrV6osYlTnKu5+kITpfuDLC4j5/J0g9Z69y5v2o
      TKVLK5z8zqs4tY31fWjXGLd97m40a+Pa24ZHeVRovHD1EnXHAQQjqTSP7diNIcHzO5tph4Wg
      Uasyd/5s22LguS4Xz54imx/A6NGdRgjR1s9ZtbBKJpNtlSqklG32GLeKAMT1+uqX4pxNllcm
      sfRqwPzQiqrQ7TVSKyewxx7qKjjRvNrN6Hp2gc3CAPq5DoDf9Dj74zfamB9g9cISV47Psv3B
      faGBwv7BYXbkByg06hiaxnAihVh/Rt/3u6JmQghKqysI3yOr+ehIXCmoSw3f8ygsLzI2NdN1
      zOl0mkQiEQTUZbNZ1tbWgsC6KNWqVV558QWuXpn74AuAwpXDf/crAF0hQbsAMr7wlV5bRBOi
      TRUQQmDWrqHP/hBRW0IO7cPb/QkcvT/743rGez3MHz2vXqjQKNZij1u9uMT2B/ZB5DYJTWc6
      0+oxLFuu70AdU0lD0bH5SGqVIhOGs25TtXKHctJnxTPwY1CtcAgG0AZvKj0/fKw6vlat8s2v
      /TmLC/PALWADqG6HEF+OpB+K4ta+3r3ctzRSbR5kIQSJ5dfQf/rPwW5FOgpAnP4WfOJ/xdUH
      t3TvYAwxrY7U8er/6xGCfnccaM2t53dWmev6Oz4mRZAOvjaAJ1thFacWrpArLdKUNq81LjDv
      rpHRkhxNbGdYH2VgaKjjGcPP55bLmBfOkyus4JsGjdsOkcmkY8NBXn3pxYD54RYRgK3g4nEU
      ZcBmYgQ/PYlem28/Do0lbYr5S5dIpzMMDg+j+zbaS18NmF+RWJvFOPGniLt/94bGFkdK1VK/
      xzFlWP+OM3wBUiNZkgNp6qudVZ6Hdo6hGzo6/YV46/4a2urfQP0s4KMZQ+hDn6GZOMTq8jVM
      r8KflX7KilcOznmhfprP5e7lU9ZDGJaFbXfiTAnbJvPSC2i1JjI1gN5w0X7+NI1776Ke6LS5
      rl1pD0O5JQRAhvTQKF3PKun6gvL2T5Gd+zF67RpIiScsnr0k+fH3vk+z2aqjs3PPHj778BGs
      4uX4Cy2cQPebSK3HjnIdO1ZcjFJUEMLX7gYAGIbBno8d4fR3X+swgmfu2d33eDRc9JWvQWN2
      40NnEbH0NfzR30JzHX5QfZW8P8JH9U8wwABLcoGX/ON8r/IyH2l8junBkbYUSAGkCiukX3kZ
      UW+pacJz8EZ2oiXzaG+8QvPRMXTa6zUlI806PvAC0IvCuuFWqewl8Xb/LQy7gOY3eenEGX7w
      ytPB957ncf7MGZ5qzPP5brMsNDqU6C1QGN0KM7FhGFvO3Ioj13UZ3DnKnb/+UAsGrdpkJzph
      0M1Ic+agcSHmAWwStePUrR0MelM8pj8eROJOM80h7SB/5X6ds+VZJgYn0KSPt77jmI0G6eMv
      ooV3BddGXzqPO3OMlDPA1foiI9kdgf1hGAZH77iDs6dPBXbFB14AwvXmu8WiXK+u7PrgGC39
      9MRb34097vxClcruSXL1ix3fyZn78DTrhuNRoiv5jQbTKVKeayufYuruXRth1s4XqwoAACAA
      SURBVBHmF4BzaZnG6Tmk65HYPUli/zRSEzi2TfHaScb0+DFpfpEDw2Psnru/IwzdEmk+rT1G
      9bU/Rb74VcxEDmPfZ3H3PUFi/hoiRiXCdxFOHT89gK9LBgYGEKJV12hpaYnhsXEeefxjPPf0
      z1p95m7KTP0SU1zfW+g0FqNu+c2YKHxeqxBvfGXkpicoH/1HZE/9GyhdbiEcQoOpe/CO/eZN
      Y9bo2G7WdaI7i3LmBSSh+uxJSk+/Dn7rWaqvnCN9dCfpT93BmTdPYPhNRiYEmoh5VnMKY/EC
      GvEw56CYZO/aIsJbhTKI5VOY9QKaeX/s3ikApE85rZFLjVMoFimtraFrGkNDQwwNDZHL5bjt
      yBGWFxc/+AKgmDRafruXh3QzLyq0VBxllBm6zujYGGuFQsdx6UyG1Pa7cHf9n+hXX0DWlpBD
      e3DH76TuCly3+UvZRK4XhXdTf6lI+RdvBcyvqPbGRVbzYBsNmuRYrU0ynL7WFi4k9UHIP8Cl
      N/+cSSaxYgxqX/ok/XA9Jwknv4l3z91IOhVICfi6wWu+zVM/e45Cvc54JsvnDh0muw6VNptN
      dMNkYnrm1hCAZDLZEWQWZxQq6gYxhilaDPeBRx7jyuXL1EM9yXRd54FHHiWZSiH1LPLA5yiV
      ily5dBmncJbJqWkyudxNeMqbt+pvRqrllHr+5twy0on3iVQrJRi0kGjMFo7QcFMMpxfQhIeW
      3I4+/gRSH+WSZuPKOXaL3YhwYWIkC87b7JSR7j7NCk4WzMlJjPn54AwJyNQAT3l1/vXpMzTX
      QY+54hpvLc7zTx98hCMjo+//RtlbJZXGF1U3uhmR10MjY2N86Te+wsvPP8/K8hLpTJZjd97F
      7n0tb6mmaZw/c5rv/ee/Ccqzm5bF/Q89zD33PxAtGtc3Nep1Zs+eoVIuMzo+wa49e/o+VwXf
      hSMqlbEYjUVSSSoqjipYAPTuFozhEgTIedJkrniQq6W9CCHZe+QjZPRBdCkZGTjM9ws/5Enx
      BSaZaOns0uecPEe9+Z87VR3dxEsOUrnnKKnzZzEWFkBK/KFRmtM7+f6JFwLmD+bJdfmrN1/n
      8Ec/DvIWqgsE3aMl+6V+bAIpJcMjo3zqc08EjBPeSYprq3znW39NtVIJtm632eSFZ55mYmqK
      mR07t/RMQghWlhb5m7/8C4pra8Fn23bu5IkvfilAgeJgT0VLS0uMjY2xvLwMtEqRAMzOzjIz
      M0O9XieXywVJJnv37m2LpwGwdowjkhayEenwIgTje3ZzsTrf5sn1pUE6kyOdG8B0fBJzazzk
      7uen5k/5D85/YIfYQV7kWZbLLHpX+H27vToHADP342am0HSdyv6DaPvWU081DV9Kik58t5mF
      SpmG65IMhbHfEgkxN7K6b/XccJxPeHc5e/Ik1fVGfeEt25CS5bNnAqRCJbY0Go2ORJjw367r
      8sPvfIfi2hrJZCIoPHX5wgWe//kzwTHRnzhAwHEcMpkMlUqFUqnEwMAApmlSq9UoFAo0Gg1y
      IVUtnBqpDWUY/JW7EcmNz4Shk3voEENH97H7wCESqRRCtJguPzjEnkNHMNBIXiqgV21GSfLf
      5J5gB1ku+Od5zXuFQnOBgYUR3OlP4CeH8dFxtQS1ifvxHvgDPBmKWRICP7RIWV0CAFOmiRl5
      /ltiB4h6EKPIT5wqFI1Xv14KdoDVTgMZWkny/vw1TN9Hhl6cSgLvRsXVVYqrK9x28ACjoyNB
      mfH5a/NcvjDbinQM7QJCiI5amqZpcvXqVUZHR4Pey7BRqtA0TfL5PGtra22RnKo1bdCW6sAU
      Q2OP415aQno++vQQYjRPrVEnkcmy5/DtSM9FAulMqyqHXmsi6k4rXbVRYv/yCv/Mv5cFqrhI
      BmSSwmOHyYxto/TKYbKVRRp6krnEOMalBaZ3dVH1pOTg2BizMfP98M7dmJFSMB94AVDJ6XGk
      9N9eDH6jMKUSLL2HY2qlWMJaXaE5PNr3fYXvsHf3LkZDHVgSiQQ7d+7ErzaCSNWwEEdVPwUL
      quOiSe/ZbItZlWqk5kqlRqbT6Y2FZGwAa3yw7V5hsm2JEUqp1Fw/2Am1wmWE72Khs531KhIa
      DFxawDs/h2k7CIaQLowXy5xxL7CWzTIyGZ/m+rduO0Kt6fD85Us4vkfCMHhk524+u3d/8Ky3
      jA2gaRrWehxJNAlD/R4Xnnwz8XkpJRNT8S8LIG+aiAiSspnqlUubjI2NdKYhChgYGCDhQjOk
      CcQZ+/V6nUqlwmioFDy09z+LIyFaaYUq66qfMHNV00eRlzCQAoTXclzFnlMtrwOjIvhXB/bV
      apxamIcuApDUdf7BXffwxMHbWLMbDCfTDJpmK6n/VlOBNE0jl8vheV5bVbJuQhBHvQzJXqR8
      CgA79uxlYmyMhaWltmMSmsZdI8O4A4Md5/aKzPSEhdB04obj+D5atYlIttcGUpWh1TWXl5cZ
      Hh5mdXWVarXK0NAQ5XKZWq3G6Oho4DvxfZ9MJtMG/QohkJ5Po9TELtVJDqZJjWa7olkKFFCq
      lJvQ8YYyGMul9ZCQ/gMWdSkZ3qQlq/R9RpMpRpMttS4aEKjG9IEXACE2kqzD3eLVhHjCY8Ve
      AglDyREMYXRNZtlqAnlYsHRd54nPP8mPv/kN5tZWkRKGLItfmZxk7OgxSuk0hBJ3wv/HCYGR
      SGGYFk5Mf92UbqIJreOFJxKJtspuO3bsYG5ujmw2y8jICLVajUajQSaTYXBwkNnZ2aAuj0ox
      VOQ3XE5/701WLy6iKmaP7J9k3yePIcxO20U3DC6srfLj8+dYrLYKAXxqz34OJIcR1XH0pSsx
      nt0uuclALpnCjixc3XaisOqmFoCgyt0HtUtklOr1etAbF1o7w+zqWb5x8mvMl6+BgOncDF8+
      8htMp7cBndlgW1WLojV0hBCY1Sq1N99AFlYYymXRdu2hNrMNN/LyFEYf1eHDYc6Fa1eYuzjb
      dk/P8yheW+GTT3wBP221CaFSbRRVKhXq9TojIyOsrKwEFRey2WzQkE7ZSaqzC4BAcPYHr7P4
      1lzHM8/cs4ddj93WsVi8tbLEV5/7BZWQwOYSCX7voUc5kh8g/erLGNeuImQrm8IbHUMrFdFi
      BFwCtXvupTa9ET4RRd8UqV0/gD3X/3ddtyUMt4oA2LbN6mqrJIpTsnnr+Zf5uv91aqI942k4
      NcLv3v/fkbd6J6r0Q9HGcoo0TUNbZ0wvUh05/HtYeALjMfSZrml862v/kaGhAQzDpN6oc+nS
      ZVZX1/j0E1/g0LFjQDsKFDV0t+oTgdbqf/xPforb6Gw5lciluOe3Pkq40owP/M9P/SgWmdk/
      MsofPv5xNF9ilkvotSpeKo2dzZGdPUfy7bc69gF3eISlu+/BFRqJRCJ4juj/SuUKl09X36mq
      Hh94FUiRKo/nrDV48xsv8JrxGrWxznS/Qn2FN5df597xB284pLib/u77Pv4mx0VtgLhjSsUi
      52dnYXajT5miSxdmOXz77ZvaEtdDvucju5R39F0P3/MRIUEtN5vMl8uxx18pFak6DmndwMvl
      IddCgVzXpb7vQAudmj3fivzUddyxcSpHjtFwXbLZNM1mM6gj2pZQv27zRcvHKNJ1/dboD6BI
      0zQSusX5p09gl+vUx+tdQ/GLjbUAOerWAPtmURSZiVvJugXmWQkrsE2iWW8XZ8/juS7a+g7U
      zyof9Y/4UnB5ucLiWp2RXJJdE1k0AUbKIjWUobJY6rhGejSHZult4zc1DUPXICZkyNJ1jAgy
      owkNSh7FpRJFOUTq0AOkB4xWuqOm4dNyaqkdVvUgUMyukKlkMtm15IyiW0YAAKrzJWqFMiPW
      OQ6L85yWsgNGFMBkcioopKRiYLZKUQfbjVC3ayRTabbv2sXF850NOWrVKivLy4xNTPS8dlwc
      lBCCWtPjT77/Nq+cXcSXEiHgyM5R/sGnD5NPGex65DZOfvuVNjXITCfY9chtHb6VlK5z9/Q2
      fjp7ruP+927bQULbEBhd06icKVC5sFHBr3YF6jMDZG8bxl1X49qYOFQ0V82XimeKI2XT6Lp+
      a4RCKPJqTaYSr3M0900eFkWmRSdzzIht7Cxva61CbLQGuh6/QD/nRA1fRf0E6Pm+z7btO7p+
      b1obu1c/WH2YvvXseY6fWcAPxgZvXFjmL58+CwjyO0Y49qX7mTi6nYHtI0zdsZNjX76f9Hgu
      Nujwy0eOctf0TPBMmhDcu207Xzx8pO14p2hTubTWMZ7a1SJOwW4rcRjN6AvDzr2eNVy/9ZbZ
      AYQQJNI2Gf8HaMLDtw7wJeNLPOP9nIvyEgLYqe3iUe1h9KpobQzr86d2grgOh70oiuKExxKl
      OKbZrIqFlJL9hw7xwi9+3ta/C2B62zYGh4Y75qAfaro+x08vxH534vwSlcZ+skmd9HiefZ88
      hudvVFrrBhVndIN/et+DXC4VWa7XGE9nmMnlA+hXkbNa78gtaD1s6ztzJNkV+lSfRztNhp87
      +t0tIwAASauIlCWaeo65oYfIeTk+q38GhxbzmLQwcj3R6WAKN27oh5GizrVuAhAuFBs9P3xu
      t3sODA7xmS88yY+++x1q6wVfp2e28dknv9h1XFGK7kCu5+N0MXI3+hus2xbItnDqboW/pJRI
      32dbJsv2bKtphVi/Xpu60qtSnta5mMTdS9d1qtUquVyube6aIfVJfXZLCYCWzOJpOqXUHipW
      BqvZIOElsQhBg5ogvW0g6O8VprAjJRqoJoTAazZw7QZGMoVuJtpezmZC080bvdl5Ukr27D/A
      zt17WFlexrIshkZGuh4bHUucqpC0dLaN5jh5uRO2nBjKMJCx0LTu6NRmnvU4B5+KdE2MpBCG
      hnQj868JEmOZvtQ4FaekVFcVKKjg/vB9bxkBEEJgjuzGm7wDt6KBgDVzlQEGSXhJBC2vsD6e
      wBpNB2HHUVKoQ9jJ5TtNTj/7A668/SqO3cBKpdlx7F523vVI15pEmzG2bbf03V7MFP1OFZAK
      B/+F0ztVg4u43SW6Q33x4T189W8qFKsbjqhhafOIc4njf34WPZtl1+23M7BtG7ZtB91X4lbk
      uHGrMViWxdLS0kZQXspg4OAYxVNLgRAIXSO3bwQ9t3k5d/W8mqYF4IUSgtix3CqOMGhNRH3h
      DIVn/i0njXuRQgcJutTR0HCFy/b9+xmZmNqAArtMuEI6DF3nte9+jbm3X+04ZvddD3Hk40/2
      rEcUDrEIG3VK3boeCl87nOEVZvTNBEsIjauFKj959TLXClXGmmVGTv6U8xa4inmF4KOPf4xD
      990fqD7drhmFdcPd3FUDbnW+6zhojsAt2eCDljfR0yaSjTLq6lph9QYIqm/Hwcmxz3orCQC0
      JqJRLXHqjRMsLbRnG2UHBtl35BhCtDdw6CYEUkoqS1d55j9+NbatkWYYPP5f/j7J/HDM2b2p
      mxc5bgzQiRqp3+v1emcQW4zBHfV3aJqGTYMVZxGBoPin/x/fubaIjOxchq7zub/7X7Bj22SH
      bh4GAKK/S9lqdFetVvE8j3Q6vQGFruP4YSFRvo5wZ5zoM5nSxS3M49l1jMwAfnYYM5nqQIpu
      SRVIkRCCZCbPwTs+QubCeQqLC/i+xEsN4A7OcLakMZoSDCU2/GS99PPy0rWuPb1816WyvHBd
      AtBNt15r2ixUKmQTCaYy2SC/tZvHWBXJsn2fK6USvvSZyQ+QCglXXMWM0/U3OL72c5qypU7V
      BuvI+c4xOZ7H17/7HP/473+BgXR37D18bRWMBi2GVNlmUTQnnFKqnlF59DvmqlGleOY1fKc1
      Xnt1CT2T4/VMnQV7hW357RwZux1TWMG94BYUANioFLH34CGmd+7mjfkaZ1c9/AqAx9lV2DOk
      c3BQtDKWNIGUfgsMFzp+CKYzYupPyvWkXwE4dn1To7AfkkLwzPm38BdeY0avseAbvJrcySOH
      HyRnmMFzxRmYZ1YL/LvjL7JYKSOBkXSar9xxN3dNTsWOa9G9wnOrP2kr8ttL8y6Uazzz5lU+
      d++OnnCvUl/qTY8zV0rUbJftY1kymRbmHDeWfgAEXdMoXT4TML8it1Jifultflx7HYFg78gB
      fvvuf0JKT9/aAgAbL2el5nJm1WuDnn3g3KrHqCXRCj9j+dIPqZcuIKUkmZ1meOYxhrd/ConF
      8LbdJDM5GtVy6Nob13r76e8xOLWD1OBGttf1jPX0/Cz3lp5hR94Jrl/33+KpMx53HvlEqypC
      JOgLoOg4/KsXnqUQKteyVK3y/7z4HP/jxz/FZKR7ixCCk9XXO3okW9MG9sm4yEyNmpZnvlDd
      1OchhODCYoU/+s4bXCu0IFtT1/jk3Tt58sHd8YWuIjtbrJD4Lk6tM9ZICMF2cxSBQCI5u3KK
      H577Dk/s/7XgmFvKExwlKSULFRcvZnEWzWXOPfP7nH3+X7B27Tns6jzN2gKlxVe48Mr/wdtP
      /de49cuYqSxHP/EkRqTro6JGtcSFV5+NhR773RUkMLZ2gh2m0yZcKU1yr3+OSr0V5h1WF5SR
      /tbyUhvzK6o5Di/MXY5dpatuJzOZ2wzM3VabWEhgxZiiLrKMDaSD8+N8JUIIHE/yx999M2B+
      AMfz+d5LF3jpTEz1h/C9esyXLwnstig1pQehUZ9cfgsvlHxzy+4AiuJqvOr1i+w+/T8wU72G
      JVs7QlEXXDHBU8Zl6SJv//QP2P/A/8TUgdvxHIdXvvO12HtUCouIljbV9iL79cwKPKYoRsOW
      ABjSHGy3jKZ1hm8LIai7nSHLimpO53dSSiYT21hqtpd+F7og83AaMrdx8UwN3wdbS9HQMuyb
      GeJjd850xACFDXMhBOfnS1xZiRS5otVJ8hdvXePuvSM4TbvtnOgcqRBn3dApOyXK9RLj+UnS
      0zupXDpD2IPZ8Js8Xz/VJrSWbrUV37qlBUAIwbaBBKcLDg0VqSglU1f+lMOla8HkSARL2SNc
      GbmLipEm3ZhjdO05pL3K7Iv/hoMP/S+MzOxEMwx8tzPkcWBiJngv0YjLfoRAEzqJZB5itnk0
      g1Qq3xZoGb7mwZFRErqB7bWPSxOCO2JsACklR7P3cKl+jqK72vbdVGaKx5/4LC+8tczLZxZw
      XJ9DO4Z57Ng0aUvrQMuiDKz1eFRNCAxDR2B19FpW45Ky1e2nKRr8+Rtf4+3F13F9l8HUEL96
      4EmO7DxA/dolfNeh6Nf4duV5zjsbIR0Cwf3bHkZ6smWjCYH+h3/4h//8ZpTSfj+SEIKUZZDR
      fQo1F8f30Z01jp37v8j6btCq59nJX+Xp6S9QSUzSNIeppnaxlr6biRMuM6828Z9+Fs7O4o8M
      UaoV2+6RHR7j2MefRDNbfXItzyO1vEyiXEYzTXzTjN0R2qHDVgqkVTzX1pdMAs7gfuyhw11z
      cdO6TsI0OL0wHxiyOvCZfQd4fPfeNnVMQa8aOnsyB5ECHNkkrWc4kD3Kg4Mfw5A620czPHDb
      FA8enmLfVA6Nzsy38O/q71zK4viZRaqRRBoh4LP37WL7SDpwZEkpQYOGrOEJt1U5WoIUkj99
      7f/lxPwruL6LL31qTpW3l95g77Y7mdp2jPT4dozxSd4snWG1XkACKTPFx/d+mo/u+DhCbFTD
      u+X8AHHk+z7laoWVi1+jsniS0de/R26dW5aS0/yn/b/Xqugcoe3nL/Loj34WbKheKsnyx+7n
      WnkJt2kzOLGNffc/jpVplehOLy+TfvVlNLuBAHxdp7HvAJW9+3AjDZ+j6ZSaJsiWTpJceAnh
      VJGagTuwl8rkw7iiM8tLXcu1bcR3vsvbLx/nraFBfCG4bbXI4X37SH7lN9p2DuW1DlqIGkYQ
      AKjq+viyvdGIWpUty2rrAaaEKozlA5y5WuKPv/cmS8VWJQhDFzx2bDt/+9G9rerRUpL0XBad
      eV6wj1NwlhEIJpIz3DvwKMVqkf/9mX8RG6py19RH+MrRf4hgfQxCslRboOJUGE2NMWANtu14
      t1RCTC/SNI1sOoPI5jGW57AFZGnBmJdz+2OZH2BxahxP1zEU49QbTK812fX3/lGLGUJx7qbd
      JPXKcfTmBlSneR6p0ydx8oO4I8NtzhplyG44giTl3G3Uc3sxvBq+sHD0FL4vEcg2poONVdi8
      cpX6z55mn+uyb20jgcV/6Tj+nXfCkcPB8coZpq7jOA5uvcqZU+dZWaswnjXYuWuGxOgUtt3s
      UN/iOsCrZ1BqzcyQyT/7jfs4eWmVqu2wYyzHzvEMSIkhIHv2DPVrZ/jxnjmq5oaxerl+nrpX
      ZUbujWV+gLXGaivTy1mP3JWC8dQk4+vFtzUhwG/h01Ks+0h68MUtRZqmYY3/CqnyBc5ZJxms
      exgQtPmMIyEkwvCCih4C8K9dA9laKbXQufr8QhvzB9eQEuPiRYyJ8Y6u7dDu6ZVS4mDgaOvF
      o/zN3f3+7CzEXBcp8c+cQRw90nGeEAJNCApXrvFHPzzFuaJE0qrvf8epMl95rMHwrv3BTlAu
      l1txS63IEoQX721uNptoQpBJGnxk/+iGoKzvWJkLsyROn+Ll6WIb8ytabi4wlpjB1Ewcv9OA
      n8pMIFjvOO84gUALIaDqsXZmEadkIzRBcixDdt/IrQ2DhkkIQSI1SHbP7+CNH+VMQlDVYKJy
      HtFlxdnWOMPg/jNoqY0aNdrQcJs6o67tN+yuzZC8emPTru5Stgy3hfo1zhZPsdYsdNgMsc/V
      K6UzEiIRpvrFi/zZX5/g7FqL+QF8KXhlSfLtly7j2/Vgl0rnU7xZe5nvrXyD7y5/nVdqz+Lq
      nT6DcCx+FNbUAevSBQRQTMSXWwfIJFPct/2hjs/zmsGvyhrZ0ttomghyfgGELVl99RrNQh3p
      +vhNj9qVEsU3b4EGGVshIQTJdJ4dt/9XvFn4b1nVHValzUJxlrGB3W1Yc95e4cH5b6On66R3
      XqVyahfSTGI+8nCrMFUkRc/JD+JJ0CM8LiW87nrMXTrHRya3kdFaDKJUB8UkNa/K1078e95e
      ehPf97B0iwd3PMYTB76IJruvY+LgAUQ6jYz6AgwD/fbb8WKQKE3A5ade46yT7kgZBcEr8w5f
      rNVJ5i3Q4BdrP2K2djo4YsVZYqF5hU8OPYlw2+ehW5KP5vuIdVh2uG4S2/0CQd4Y5gsHvsxQ
      cpCXZ3+I7TWZMRN8KT/JbuHB3FM4e8eom8NBzJB9tYJndwqVvVz9UACiJIRgatejVG7/x1x4
      7V8zIFeYWfkRC9593GnoSM1ivDbH7SvPkHErIMDI1mA8g/HpL1GbmkRbtwnaYlYmRljJjTNa
      XgzgQClh3tM5nktRXS2wUqvx+X2Hgr6GAWMK+Ku3vsYbC68Fl7M9m6dmf8BQaojHtn8iVuUQ
      QtAcGiLxt7+M/Rd/iVxPmCGZJPm5X4WdOzpUACklXq1Mo2DjEd/Iu+FImlKQkJIl7xoXamc7
      jllpLnLBPs0+60jwLKpjZ5xTy9N1/EwWrdHg8Eqa18cqFBPtatBkYoZJcwav6fPEjkf5tdpF
      PN8hJVplZloP4GHVrtIYHAnqHLnV7r6QDwUghgzDYN9dv00yM82F1/4VRyrnOFiH+8rLpJ3V
      juN9TYNf+zv4ew6jA/Pz88zMzLSFCPsCxAMf4cqrJzHnr+B5LnOGxWsTA+xK59lOgmZTUi4U
      GR0dagtrKDprvLX4RuxYX5h7loe3P44WYeXALgDEPXeT2r0b//w58Hy0PbsRExPrDOmj6UZb
      Lq2mmwxokkHPZ0l0RqQOJCWZTMvzu+qsILtECq04ixxIHguEMZFIUK/X2yrMaZoWwM2Ng7eR
      eeE5so7kybOjPD1TZD7bBCvJTGond+UeQvgaui6QzTIJJEKLqbvkVtqur6e7q4EfCkAXMk2T
      XYc/z9SeT1KYf5XK6lnE6R/DtZc6jnWsKRK7DqKvlxffvXs3KysrQSW2bDbbEgZLJ/HAMd5Y
      GOOlK5cxDJ3P6cPsJrmB+S81cQybcn7jpdluA8+P14sbbh1feh0CABtC4Pk+DA4g7rmnFYnp
      eVw7e5q1wjJSSlKZDDO79pJIrYczJNPk943wibcqfENkaYbUIFM6PH5oBMNsJaekevQ4Tmrp
      tgQc1WQPWohMurCCdfkSmm3jDg5h795D5YGHSJ45zXC1yufXZiiN7qQ5Oo6O2bYouEYOdAu8
      TmDBs4badpjUTI76tRK+3b6jJEbSHwpALxJCkEylmdr1IHLnA9QnP4L37T9AlDdKAnp6Fnnv
      P0Gk0sFKJ4RgbGwMKSX1ep21tTU8zyOZTJLL5cikU3imxu0i08b8AEKCuVAkmR+nsb6yDiaH
      yCcHWKktd4xxKjeDIUw814s1ouOcaxfPnKQUqtJWKRY5//Yb7D92J4bZypkd/PgD3FF+iszl
      Ei9qSdaEhkmdIwdyfPSBOwKfwYS1jbwxSMltr+RgCpPdqQNtGWmNRoNUqhWfn527TOr11xDr
      TG0sLWLOX6XywMMU73sA4bUidnxA+BAuJeb7Po6eoTlyFGvxeJupIPUkdrq9arSeMhm7ezur
      JxdwyjZCQHIsy+ixmQ8dYVsh6fs0Cpdx3voWcuUsMj2Ot+fTePnt67VzWhBcMpkMPKvholW1
      Wo1SqYSZTvH04lUetVPsE/ErqL1zhEqqBeetrKwwxwX+0xt/hhuC/7JWjt+57/eCWqb9kF2r
      cvr1zuw1gImZ7Uxs37kRe4+kcfkytYVVGkA2pTOezyNzOeyBwZYTTUBRFvjF6o9Yc1aQQMbI
      cu/Ao8wYu4LMNikl1WqVbDaL5bkMPvXj9ibXtNSgpXSB2dxlhmceJTfxEL7UO0IqVK0mUxek
      C69jFd5CeDZecpjGxH3UzLE2z3g2m23lCDcdmrUWDJpIJzFM40MB2CqFnVRSSsrlcpBQogRg
      eHi4rQhruVwOhEFtzVXfI3FhhYlmPPRZ2z7I1WYFx3FIp9PkcjneLrzBLy79jFKjyGRumgem
      HmHn4O6+g+oAyqsrXDh9Mva7geFRdh08hJSSxaLN029cZbXc4I7JNJ+2mxHNVgAAFOdJREFU
      r2IsL633ORa4Y+MUD9yOn0uDDh4uJX8Nic+QPoyJheN7wfM2Gg0SiVY4SKZYJPuLp2N9LEW5
      yHPeX+AjGd/9abYd+11kpH2qoNUpPrW0iGg28QfzOGOjNNHx/E6fxvDwcNcKfx+qQFsktRqp
      VS2dTndkVIVDEUzTZGhoiGq1Sq1WCxgiqxukJ0eQlwqdvW4NDS+TIJfY0J2llNw2dITDo8fw
      pY8mNDzX49q1a0xNTfUtBFZMAo+i5LoNM7tY5V/+5cvUmy4CyWNrDYysGyCiQkqMxQX0wnGW
      87vJHxjFHEsxIUdJLJTRakUQ4A2kqI9k8MRG00Bd1+NDcNfJxVnPRfBZnP0uAxP3kx59IJhX
      TdPIrhZIv3IcYduBQJrTM7h33IVHu/PQsqyeqaUfOsJugFT4QLjRtdrqo2HB0ZcgpcTOmrij
      WUL93pCGhr1tCEfIIJ2x7TxfoqEhfRnYGouLi9RiYv7jKJnJkh/qTNE0TatVDAD485+cot5s
      Gd0DuuSO9AbzB88EZN0SstZg7Y15Zq+eQD93BWOthtZ00WwXc7FM+loRfR0BMk2DXG2W9Py3
      weo0XqX0mfdPh1Alyeq1XwSlD3VdJwGkX3sVzd5wLAopMa7Mkb50sS0fwvd9LMsKdt44/8OH
      O8ANkmrBVK/X2zDucDcUIHYVcn2f6ngGayCJUXeQmoaTMWlq3T270bAH0zSZmJhgYWGBRCKx
      aSK9lJId+w5y7dIsxcIK0lco0B4My6Jme8yvbiSsGKL1E0eCVhyS70mGLiVJ5Drvra/VMUay
      OCaka5dJX/oBQrowasLSMDRNQOBJl8vyDebk223n+24jKErmeR5mqYiodwq7AMyFa7Bjx/oO
      rHFhqcZrz19CSrh9zzj33DZDcr2gcPB8PWfrQ+qLTNMkkUgE9XjiqkioY1TjCUWe71M3BcJS
      hbRkkMDULXEmTjhUv9/x8fFNxys0jW179jOzaw9SgrZe60hKiWVoJEyd+rrndM0VXG7qHEx2
      xuY0tBTeun5uue2JJsG9AN12MZIWieVXW8wPYDowtQi2hefCy8vPsOxdhUhgd37s9qDCW71e
      RxQ764ZuTAxomo4uNL794iV+/vxZjiU9xtLw9rlzLJ7bwWc/d1+bEHyoAt0gKXsg3HjCcRxc
      1+1gVFXoKo42W/E3o81qCDUaDRzH2Sjm5futGB/R3vrJ0OChwxswoovg369YrLmijTUdYbBo
      TqyHSkjMZrwKJgFp6mh4aM1QQo8ANAkpG5Gt45lNosyfGdzPzIHPtxAf0ySXy6GNjSOTnciZ
      BJzxCXwpubRY4aXj5/niLjhyOMn4nhS79ifI2Ve5cPyNtuf9UABuAiljK9ytpFKpBE3pggoE
      6/H1W6V+hSCVSlEulzuOn5+fx7ZtqtUqy8vLzM/P9xS4Lzywm0/evQPL1NGE4JKW5o39d9LY
      s5dlYbGsj3LB2kNdpFtVM4rL8OIP8JudjetkykIfzpFIZvCtXMwdASPF9B2/Q3b4EIaZw0wO
      M7bz0xz72P9GbmCyDXhIDAzQvPMupGkG4iIBd3KS+s5dSCk5PbfKfROSxKi1noYmW4Ka1lm8
      eo7yytLG7vohDHpzSOn9tm1TqVQCB1Amkwl2CCkljUajw0judc2wc60fKpVK1Ov1APqrVCot
      6DEUfqB8C+Pj47E7R+C4cnwqdYehXAJdtJxSb/zxn7CjYuBO7gZNRy9cxTpzHK1epvjYHYwf
      fYS8n0ETOjKbRO4ex8y3anq6C2+SPPutDTUItXLfjdj/q3i+i11fRdNMkukhDMOIfW7P82gu
      LKBdutCCQYdHELv3YHse9Xqdt06ew1m9GsqoCwX8eT57do2z567HEOIWKo/+TlOwQq1j3aVS
      Cd/3qdVq5HK5tlDgfhp0Q/zKH44QjaN8Pk82m6VQKASG49TUVNv5iUSCyclJFhcXO2yGMNMk
      DEEynwjuqQG5XTswv/FNrLPHAQEqdVTAmyML/HTgJxxJHOXukYdI5QYwQ/q2mDyC7TUxrz6H
      1iwhdQtn5DDs/CimaWIKi2Qyvelc67pOcmoKf735h7G+QKyXvMJoloLyjW1z1tL4aDZXA6H4
      UABuIoWFYGBggGKxiOd5QaluaL28bDZLpVKJLZwbB9fFVUnoJQSapgXNr3sdY643jw7bL4Fx
      KCBZu4K1ehLhNfDSUzRGjrL94YcpvHaC7LnzgckrgaWswfD4Ue7b9ijT2W0krJhKzIaJtv0j
      OONHkM0aGBZmIoO2xb4L6rpx6qTnujTtTlVMCYHwq6QGtm/M6Ycq0DtDykus8Pl0Oh2oQ77v
      4zhOsEuEqVsdUiVc0dTHrVJYiHzfZ2lpibGxsf+/vXPpjeSq4vj/1qOrq6rf9rTHY0+UkQLR
      ZEgQESIJZMGCSIAQGyQWiAXfgU+EQMqGDWyQsghSAggFCIuIh5KAZpLMMH72q7rrXcWifa5v
      V1f1w9P2dHvuT4rGcneXbeWee889j/+Z+jmVzkcoP3ofLD030tjagfelHyGOFBz/9jfw//4h
      It9Fv2FD/9Y38ZW3fgjTriy9mFdJt9vBh398D3FOFxxDiqZ1hBdf/zHsSks2xV8maZpiNBph
      cDYdUVEU1Ov1Cclz8XVilvz3RdWiZz3n9PQUuq5P3BEM+Kh//Cso8XStTrDzDWgvfm/8+/d7
      8IZ9lKwKKvUGVDXfZ79KfN/H3/7wewyd4eQLaYq22cH+zn+gt95Aeec70EuyGvRSyMs80q4v
      zriyLAuqqsLzPPi+z/3Si+7uiyJeClutFh4/fgzTNLlh6P4xWE6ZMQOgOg8RRyFKRhm11hZq
      rfxhHE8LXddxq+3j/shDmBgYqwElMOwUx/Xn8Vn0VVhHPTwffojbz70mDeAycF33vO5dOReM
      IqlyCpcyNhbppckzomLyVbK9vY2DgwO02+2xNDkrbiBJlae/y8+CMYatW3dhhb9Af6gjTjQE
      pRr+oX0fBhzY6TGctIkPum1E5kAawGVA82l935/QyYnjGP1+H81mc2LgnqqqvH2vqGUQWEwp
      eRGyGWZN09BsNuF5HqrVCtxyE5pegRlOyhimYIi37qKkXe7s5CeBMYZE24G+9xPc6L4DjD7G
      B/EbeHn0a+w9fhfKaIjUKOPg5uv4VPuZvANcFkmSwPM8eJ7Hd3Y6CagxJnupDcMQg8EAURTN
      vAyvagfORpVOT0/h2wP8pfNnWH0T3w2P0IIHxoAYCqL216C88Ba0krnWp8BoNMJwOITCUqRH
      b+Pk80PsfvI7MKFqN9VUPHrhB/IEuCwURYFpmnzifBAECIJgXAV65u/XajV+ElA22bIs+L4/
      VTNEZKtMi1jkLjFVsVpN8d7JO3CdfRwHbfwSO9jHAOU0whFsvGzdw6t6ea0XPwA+DG84HEKJ
      b+Hmg7cnFj8AsCjGzoN3pQFcJowxXtJsmib6/T4fVBcEATzPg2VZE3F+0zShaRqiKCoc1DfP
      CES3ax5ipvnT4T8RJAyJvwWAwYWOTyCUTh88xr3dfZhr7jFQLsb3fYz+919Uvem8AACo/lDW
      Al0VFAat1+sTd4K8pNciWeJZ0Gezupzz3u/EfaSJDhToDI2iEFHB1Mt1Q1EUqLqOz7CHQK3l
      vidO86QEJJcGNdDQEU2nQXaxUx1R3jysRREvupTcyssjiAbS1LfBFB9g+QoUdaOMkr45ToOi
      KDisv4bPt789pZ6dAug3X5IG8DSgBRdF0cRMX8I0TViWhVKpNDHvdhmykaRZkSX698vVl2Er
      BhTzANnSZE1R8Oqt29DXOAIkwhiDoeuoWjb+ffuneLT1JhJG0+0Zjmuv4OSVn8so0FWTJAl6
      vR5f+KqqotVq5e70aToWlKWm+rzaoUVcnEXuA3RK9MIT/LXzJxwOFIT+FlSU0Sib+Prec7i7
      u3fhE+lpkKYpHhx08f4XPpCEaAw+RtX9AiOjjX79Jbx5pyEN4KpJkgT9fp8nyqhUuVKp5L6f
      SqgHg8HUfFz6/KrDoowxhImPFAymWYFllFE6G0C9aYRRhI++6OFfJxHOBs9DV4B72zru7dVk
      FOiqYYzxxS6GOouSXFS+HIbhuCUws5tnff3s9xch73kKxo3oVdMqlBTZBDRVxSv7dezWXBwO
      QoABOxUd2zULqqrIE+BpQeoRo9EIuq7zuqAif1+sLs0LjeZFfGYV1uU9X/wsPavVal3oDrJu
      FJWYb/5ftqGQ66NpGhzHQb8/nt7SbDZzFxydHIwxOI4z9T+0qIF+UbKfX1XZxbpQ9LdsnlN3
      jSD3ptFojIvQzk6FvMsucDbKqVKZ0CEisop1vV6Pt186jsN/HgA+PEI8MYp0+6878gR4ylC2
      uFqtotPpwPf9mfo+dBIEQTA1UklcwEEQwPd97gY5jgPDMBAEAarVKi/PqFar6PV60DQNW1uT
      pc1FuYN1p8jdyUMawJqgaRpPkM27dKqqylsu8+aKAeehz1KphOFwiCRJYNs2BoMBarUal21R
      VRWGYfATIfuMTYAWfJIkiKIIYRjyk5Aa65MkgWEYUzOI5SV4jVjW7/Z9n/cdZ6NB9CzawYfD
      IXRd5zqjALgRRFGUuzh0XUe9Xl/rUyBbdUu1V1RdK84USNOUK3XQ3ytPgDVi2R23VCrBtm0u
      wyJme8W+X7pwizIrwPlJQ11qRSHVdYXaSqnvWtM0PowEGIeZ6TUx3Ow4DqIogmXJlsiNhkqo
      sxRFdGYpSogLhKBq1HU9AShTThW0JKJLv6+qqrBtG3EcIwxDHiQAwNtQpQFsOFQ0l1f7A0yf
      KqKLlBdKFRNtjDGEYbi2eYAkSWCaJtdiAsaunmmaY+2gM9de7LIT21UBeQneeMin7fV6U6+J
      CzlrENnTIM94gPN7wqpdoryfF4Yh1y8VG4WKggLZxGG2nTT7twLjaTG2bfMTQRrANUBcLEWx
      /LwTIWsY2VOBMQbf97mLsUrILSEhYTGaJboqpmmi0WjkPiPvdLNte26nHOVfAHkCXAtoN8vr
      FMsuhrySB/F7eadGEAQrNwDHcSZckezvKJ5My5xAy95XpAFsOHkqEsssgjxjyD7PdV0+amgV
      rhC1hM6rVVJVNTfrvUrW83ovWZgoiibUphdZoHmnRfY/8X1xHE/lG56ERVo+GWOo1WqXfgGX
      BrDhqKpaOHhD3M2ztUL0dXYxUvJMNIJZWqbLQom3eQagadpKT50ipAFsOOIMgrwEVpER5DXX
      iOQ9S5R2uShJkvB5arN+tmVZE4Z4WUgD2HAoTEgaQ4u8XyTPQER3KnufeBIDoPKEovol8Xcs
      qohdNfISfA1gbKwxqus6F9WiyBC9Tv8WZYHzIi15u6/v+yiXyxMiv0VkXStSvgvDsPAz9Lmr
      KsWQBnBNoLJqipz0ej24rgtgfntk3gV61iIcDAYolUrjqS66PuWni5fnOI7B2HiYxSKRHypn
      uKo2TGkA1wzy3SuVCk8w5WV7gflNMEWnhahsRz+LBlJTOTJddskASO1u1s87OjpCu92GYRgz
      J2quEmkA1xRSfKYFSbuvuAizu3F2159VNEefTdPz3maqPM2+l3x/IuuKkfQLLXw6Ba4CaQDX
      FNElMgyDuyWknDxLc7Ro56XP0OIUS66LnpX93sOHD6cqWB3Hwe7uLp+VYFnzB+WtCmkA15xs
      SUSlUoGu6+j3+7mJrbwLcdYgaKcXd+lFEltBEEDX9anWSzJWYHVjoBZFGsAzBhWCNZvNKdl2
      Iq+ikr4W3RoyBNFoilwgAHj48CFu3bo1dfeYV8h3mUgDeAbJRoyonILuB9lCtOziFl+fd1EV
      F/Xt27dxdHSEWq0G0zQnnicqVlwl0gCeUbKSKLqu8+ww5RLEUolss4z4jEV3b8YY2u02Tk9P
      +d1EfO0qw5+ENADJxEImSXbDMOC6Lnzf51nZ7OIvl8u86yqOY3iel9ugH8cxDg4OuMGFYThR
      458kCR8gntfdNosnvTNIVQhJLqL7E0URPM9DcDZmiCRcSFmBoDofijLRIj48PMT29nauu8QY
      w3A45KeD67ool8tI05R3hgFjA6Ohg4qiIIoiPnGTWiIvkjeQJ4AklzwXqeh1QlEUrnFKUSbq
      JZi1OEks+P79+6hUKoXZ4uzJEEURgiDgp9ZFiuekAUjmsszuSlGmWq2GwWCAIAgwz8PwPA/d
      bhetVgu6rvP7RtYQstEjikR1u10+F4z0UxdFGoBk5Yg9t3Thzb4ufj0cDrGzswMgv0lf/AwZ
      xsnJyYREZJqmuHHjRuGchSKkAUguBfEkUFV14k4gGsBwOMTJyQkajcbCF9pOp4NqtYo0TSc0
      garVqnSBJOsDYwy7u7sTZdDizu77PlzXxZ07d3B4eIh6vc6lTrKnBEWXKF8hhlCJi0SEZBRI
      cumQry4m2jqdDk5OTrC1tcUX7vHxMZIkQRzHaDQaKJfLiKII3W6XV5Xatp1bK1Qul7kBLYM0
      AMmVkS2joEpVUdGZsfEAEFJ2o3kJee6NGBWyLAu1Wk3KokjWF/EiS+NfyZWhkbFxHMOyLDDG
      4HkeHMdBs9kszCFkk3PLIg1A8lShRUvdZbSgXddFp9NBo9Hg5dziZ7KCXhfNCEsDkKwVtLAN
      w8DNmzd5W6f4uvg1LfyL1hBJVQjJ2kEL27IsVKtV/r0iFydN0wtXkUoDkKwlZASGYXB5RNM0
      c9Xisop2yyANQLK2kBHYtg3TNJEkCU94LVs1WoQ0AMnaI6rfPXjwAK7rwjRNvvifpIdAXoIl
      G4GiKCiVSqhUKnj06BFXlxPrjlqt1tLPlQYg2RioTEJspqF5yOQSyVogybWFyiQUReGl0qVS
      CaVSCb7v8zGpyxiBvANINgZq1SQ1OsoBkAxjt9udKribh6wFkmwMtLBpkB4NyBYXfb/fx97e
      Xm5jjKhZGkWRHJQt2SxoQZOynG3bKJfLfFh2mqYTWkfUikm9CFSAJyrjSQOQbCykYmFZ1sTE
      SRLu9X2fu0xRFMF1XX6HoN5jaQCSjYaSZZQ1pksw1RCNRqOJ96uqimq1yrPJ0gAkGw9j44F6
      YRjCMAzYts2l4cXGeiqr0HWdu1PSACQbD7lCiqJgf3+fd4yR7LrYiJOVXpdhUMm1QQyPkmtU
      q9V4RWkYhlPDueUJILm20MmQpimfPZBtppd5AMkzjXSBJM800gAkzzTSACTPNNq8ocUSyXXm
      /yVusePqWTKgAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 7' width='192'>
      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
      j3XN/wH2bhkGtrDFxwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='49' name='Sheet 8' width='104'>
      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
      YII=
    </thumbnail>
    <thumbnail height='105' name='Sheet 9' width='184'>
      iVBORw0KGgoAAAANSUhEUgAAALgAAABpCAYAAACJUelNAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAQ2UlEQVR4nO2ba0wUVxvH/47ILuAuXljQrRCpaK2KxYCEYtF9vYKiRWuRekHaWrTxTm2k
      iNYaY2i11lhLBbWNYGyhxgJVpCiIVxIMqS7GqqUqC26iqMtOizsLm+H9sNnzsrB3ltrMe36f
      mOXMmTNn/ueZ5zzPM306Ojo6QKEIFOZFD4BC6U2owCmChgqcImiowCmChgqcImiowCmChgqc
      ImiowCmChgqcImiowCmChgqcImiowCmChgqcImiowCmChgqcImiowCmChgqcImiowCmChgqc
      ImiowCmChgqcImiowCmChgqcImiowCmChgqcImiowCmChgqcImiowCmChgqcImiowCmChgqc
      ImiowCmChgqcImiowCmChgqcImiowCmChgqcImiowCmChgqcImiowCmChgqcImiowCmChgqc
      ImiowCmChgqcImiowCmChgqcImiowCmChgqcImg83NFJe3s7qqurUVxcjLq6OrS0tIDneTAM
      gyFDhkChUCApKQlyudwdlyNoNBqUl5fjl19+QWNjI1pbWwEAIpEIwcHBeOuttzBr1ix4e3vb
      7YvneZw/fx6FhYW4ffs26WvQoEGIiorC8uXLMWLECKvnP378GCkpKXj8+LFL91JaWgp/f3+n
      zlEqlVi7di0Zq7OEhobiwIED8PHxsfh/juNQVlaGwsJC3L9/H+3t7WAYBoGBgZg9ezYSExMh
      kUicuibHcaisrERxcbHZPPv4+CAwMBDTpk1DfHw8ZDKZS/fUlT4dHR0drp7McRzy8/ORn5+P
      58+f22zLMAzefvttrF+/Hp6enq5eEgCgVquxe/duXLlyBTzP22wrkUiwbds2/Oc//7Ha5t69
      e8jMzMTdu3ettmEYBvHx8di0aZPFBSM0gd+8eRMZGRlQq9VWzx8wYAA+++wzTJo0ye61eJ7H
      5cuXsWPHDrS0tNhsyzAMsrKyMHXqVPs3YQeXXZTbt28jMTEROTk5dsUNGG+woKAAu3btgsFg
      cPWyOH78OBITE3Hp0iW74gaAv/76C1u2bEF5ebnF/yuVSqSmptoUN2Acf0lJCTIyMsCyrEtj
      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
      RIwPtvgAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
